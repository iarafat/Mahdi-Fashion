{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport { Modal } from '@redq/reuse-modal';\nimport StoreNav from 'components/store-nav/store-nav';\nimport Carousel from 'components/carousel/carousel';\nimport { Banner } from 'components/banner/banner';\nimport { MainContentArea, SidebarSection, ContentSection, OfferSection, MobileCarouselDropdown } from 'assets/styles/pages.style'; // Static Data Import Here\n\nimport { siteOffers } from 'site-settings/site-offers';\nimport { sitePages } from 'site-settings/site-pages';\nimport { SEO } from 'components/seo';\nimport { useRefScroll } from 'utils/use-ref-scroll';\nimport { initializeApollo } from 'utils/apollo';\nimport { GET_PRODUCTS } from 'graphql/query/products.query';\nimport { GET_CATEGORIES } from 'graphql/query/category.query';\nimport { CATEGORY_MENU_ITEMS } from 'site-settings/site-navigation';\nconst Sidebar = dynamic(() => import('layouts/sidebar/sidebar'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('layouts/sidebar/sidebar')],\n    modules: ['layouts/sidebar/sidebar']\n  }\n});\nconst Products = dynamic(() => import('components/product-grid/product-list/product-list'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/product-grid/product-list/product-list')],\n    modules: ['components/product-grid/product-list/product-list']\n  }\n});\nconst CartPopUp = dynamic(() => import('features/carts/cart-popup'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('features/carts/cart-popup')],\n    modules: ['features/carts/cart-popup']\n  }\n});\n\nconst CategoryPage = ({\n  deviceType\n}) => {\n  const {\n    query\n  } = useRouter();\n  const {\n    elRef: targetRef,\n    scroll\n  } = useRefScroll({\n    percentOfElement: 0,\n    percentOfContainer: 0,\n    offsetPX: -110\n  });\n  React.useEffect(() => {\n    if (query.text || query.category) {\n      scroll();\n    }\n  }, [query.text, query.category]);\n  const PAGE_TYPE = query.type;\n  const page = sitePages[PAGE_TYPE];\n  return __jsx(React.Fragment, null, __jsx(SEO, {\n    title: page === null || page === void 0 ? void 0 : page.page_title,\n    description: page === null || page === void 0 ? void 0 : page.page_description\n  }), __jsx(Modal, null, __jsx(Banner, {\n    intlTitleId: page === null || page === void 0 ? void 0 : page.banner_title_id,\n    intlDescriptionId: page === null || page === void 0 ? void 0 : page.banner_description_id,\n    imageUrl: page === null || page === void 0 ? void 0 : page.banner_image_url\n  }), __jsx(MobileCarouselDropdown, null, __jsx(StoreNav, {\n    items: CATEGORY_MENU_ITEMS\n  }), __jsx(Sidebar, {\n    type: PAGE_TYPE,\n    deviceType: deviceType\n  })), __jsx(OfferSection, null, __jsx(\"div\", {\n    style: {\n      margin: '0 -10px'\n    }\n  }, __jsx(Carousel, {\n    deviceType: deviceType,\n    data: siteOffers\n  }))), __jsx(MainContentArea, null, __jsx(SidebarSection, null, __jsx(Sidebar, {\n    type: PAGE_TYPE,\n    deviceType: deviceType\n  })), __jsx(ContentSection, null, __jsx(\"div\", {\n    ref: targetRef\n  }, __jsx(Products, {\n    type: PAGE_TYPE,\n    deviceType: deviceType,\n    fetchLimit: 20\n  })))), __jsx(CartPopUp, {\n    deviceType: deviceType\n  })));\n};\n\nexport const getStaticProps = async ({\n  params\n}) => {\n  const apolloClient = initializeApollo();\n  await apolloClient.query({\n    query: GET_PRODUCTS,\n    variables: {\n      type: params.type,\n      offset: 0,\n      limit: 20\n    }\n  });\n  await apolloClient.query({\n    query: GET_CATEGORIES,\n    variables: {\n      type: params.type\n    }\n  });\n  return {\n    props: {\n      initialApolloState: apolloClient.cache.extract()\n    },\n    unstable_revalidate: 1\n  };\n};\nexport async function getStaticPaths() {\n  return {\n    paths: [{\n      params: {\n        type: 'grocery'\n      }\n    }, {\n      params: {\n        type: 'makeup'\n      }\n    }, {\n      params: {\n        type: 'bags'\n      }\n    }],\n    fallback: false\n  };\n}\nexport default CategoryPage;","map":null,"metadata":{},"sourceType":"module"}
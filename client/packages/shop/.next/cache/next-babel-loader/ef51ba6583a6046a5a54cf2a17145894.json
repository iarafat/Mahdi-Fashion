{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/home/arafat/codes/pickbazar-template/packages/shop/src/features/user-profile/order/order.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query getAllOrders($text: String, $user: Int!, $limit: Int) {\\n    orders(text: $text, limit: $limit, user: $user) {\\n      id\\n      status\\n      deliveryAddress\\n      amount\\n      date\\n      subtotal\\n      deliveryFee\\n      discount\\n      deliveryTime\\n      products {\\n        title\\n        price\\n        total\\n        image\\n        weight\\n        quantity\\n        id\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useQuery } from '@apollo/react-hooks';\nimport { DesktopView, MobileView, OrderBox, OrderListWrapper, OrderList, OrderDetailsWrapper, Title, ImageWrapper, ItemWrapper, ItemDetails, ItemName, ItemSize, ItemPrice, NoOrderFound } from './order.style';\nimport OrderDetails from './order-details/order-details';\nimport OrderCard from './order-card/order-card';\nimport OrderCardMobile from './order-card/order-card-mobile';\nimport useComponentSize from 'utils/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\nvar progressData = ['Order Received', 'Order On The Way', 'Order Delivered'];\nvar GET_ORDERS = gql(_templateObject());\nvar orderTableColumns = [{\n  title: __jsx(FormattedMessage, {\n    id: \"cartItems\",\n    defaultMessage: \"Items\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }\n  }),\n  dataIndex: '',\n  key: 'items',\n  width: 250,\n  ellipsis: true,\n  render: function render(text, record) {\n    return __jsx(ItemWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, __jsx(ImageWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, __jsx(\"img\", {\n      src: record.image,\n      alt: record.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), __jsx(ItemDetails, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, __jsx(ItemName, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }\n    }, record.title), __jsx(ItemSize, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, record.weight), __jsx(ItemPrice, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }, \"$\", record.price)));\n  }\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle2\",\n    defaultMessage: \"Quantity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }),\n  dataIndex: 'quantity',\n  key: 'quantity',\n  align: 'center',\n  width: 100\n}, {\n  title: __jsx(FormattedMessage, {\n    id: \"intlTableColTitle3\",\n    defaultMessage: \"Price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }\n  }),\n  dataIndex: '',\n  key: 'price',\n  align: 'right',\n  width: 100,\n  render: function render(text, record) {\n    return __jsx(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 14\n      }\n    }, \"$\", record.total);\n  }\n}];\n\nvar OrdersContent = function OrdersContent() {\n  _s();\n\n  var _useState = useState(null),\n      order = _useState[0],\n      setOrder = _useState[1];\n\n  var _useState2 = useState(''),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var _useComponentSize = useComponentSize(),\n      _useComponentSize2 = _slicedToArray(_useComponentSize, 2),\n      targetRef = _useComponentSize2[0],\n      size = _useComponentSize2[1];\n\n  var orderListHeight = size.height - 79;\n\n  var _useQuery = useQuery(GET_ORDERS, {\n    variables: {\n      limit: 7,\n      user: 1\n    }\n  }),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  useEffect(function () {\n    if (data && data.orders && data.orders.length !== 0) {\n      setOrder(data.orders[0]);\n      setActive(data.orders[0].id);\n    }\n  }, [data && data.orders]);\n\n  if (loading) {\n    return __jsx(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 12\n      }\n    }, \"loading...\");\n  }\n\n  if (error) return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }, error.message);\n\n  var handleClick = function handleClick(order) {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  return __jsx(OrderBox, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  }, __jsx(DesktopView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, __jsx(OrderListWrapper, {\n    style: {\n      height: size.height\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlOrderPageTitle\",\n    defaultMessage: \"My Order\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  })), __jsx(Scrollbars, {\n    universal: true,\n    autoHide: true,\n    autoHeight: true,\n    autoHeightMin: 420,\n    autoHeightMax: isNaN(orderListHeight) ? 500 : orderListHeight,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, __jsx(OrderList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, data.orders.length !== 0 ? data.orders.map(function (current) {\n    return __jsx(OrderCard, {\n      key: current.id,\n      orderId: current.id,\n      className: current.id === active ? 'active' : '',\n      status: progressData[current.status - 1],\n      date: current.date,\n      deliveryTime: current.deliveryTime,\n      amount: current.amount,\n      onClick: function onClick() {\n        handleClick(current);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    });\n  }) : __jsx(NoOrderFound, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"intlNoOrderFound\",\n    defaultMessage: \"No order found\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 19\n    }\n  }))))), __jsx(OrderDetailsWrapper, {\n    ref: targetRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    style: {\n      padding: '0 20px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"orderDetailsText\",\n    defaultMessage: \"Order Details\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), order && order.id && __jsx(OrderDetails, {\n    progressStatus: order.status,\n    progressData: progressData,\n    address: order.deliveryAddress,\n    subtotal: order.subtotal,\n    discount: order.discount,\n    deliveryFee: order.deliveryFee,\n    grandTotal: order.amount,\n    tableData: order.products,\n    columns: orderTableColumns,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 13\n    }\n  }))), __jsx(MobileView, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, __jsx(OrderList, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }, __jsx(OrderCardMobile, {\n    orders: data.orders,\n    className: order && order.id === active ? 'active' : '',\n    progressData: progressData,\n    columns: orderTableColumns,\n    onClick: function onClick() {\n      handleClick(order);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 11\n    }\n  }))));\n};\n\n_s(OrdersContent, \"xCSTOleP6JUsyiO4/kRwGTau2jI=\", false, function () {\n  return [useComponentSize, useQuery];\n});\n\n_c = OrdersContent;\nexport default OrdersContent;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersContent\");","map":{"version":3,"sources":["/home/arafat/codes/pickbazar-template/packages/shop/src/features/user-profile/order/order.tsx"],"names":["React","useState","useEffect","gql","Scrollbars","useQuery","DesktopView","MobileView","OrderBox","OrderListWrapper","OrderList","OrderDetailsWrapper","Title","ImageWrapper","ItemWrapper","ItemDetails","ItemName","ItemSize","ItemPrice","NoOrderFound","OrderDetails","OrderCard","OrderCardMobile","useComponentSize","FormattedMessage","progressData","GET_ORDERS","orderTableColumns","title","dataIndex","key","width","ellipsis","render","text","record","image","weight","price","align","total","OrdersContent","order","setOrder","active","setActive","targetRef","size","orderListHeight","height","variables","limit","user","data","error","loading","orders","length","id","message","handleClick","padding","isNaN","map","current","status","date","deliveryTime","amount","deliveryAddress","subtotal","discount","deliveryFee","products"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport gql from 'graphql-tag';\nimport { Scrollbars } from 'react-custom-scrollbars';\nimport { useQuery } from '@apollo/react-hooks';\nimport {\n  DesktopView,\n  MobileView,\n  OrderBox,\n  OrderListWrapper,\n  OrderList,\n  OrderDetailsWrapper,\n  Title,\n  ImageWrapper,\n  ItemWrapper,\n  ItemDetails,\n  ItemName,\n  ItemSize,\n  ItemPrice,\n  NoOrderFound,\n} from './order.style';\n\nimport OrderDetails from './order-details/order-details';\nimport OrderCard from './order-card/order-card';\nimport OrderCardMobile from './order-card/order-card-mobile';\nimport useComponentSize from 'utils/useComponentSize';\nimport { FormattedMessage } from 'react-intl';\n\nconst progressData = ['Order Received', 'Order On The Way', 'Order Delivered'];\n\nconst GET_ORDERS = gql`\n  query getAllOrders($text: String, $user: Int!, $limit: Int) {\n    orders(text: $text, limit: $limit, user: $user) {\n      id\n      status\n      deliveryAddress\n      amount\n      date\n      subtotal\n      deliveryFee\n      discount\n      deliveryTime\n      products {\n        title\n        price\n        total\n        image\n        weight\n        quantity\n        id\n      }\n    }\n  }\n`;\n\nconst orderTableColumns = [\n  {\n    title: <FormattedMessage id=\"cartItems\" defaultMessage=\"Items\" />,\n    dataIndex: '',\n    key: 'items',\n    width: 250,\n    ellipsis: true,\n    render: (text, record) => {\n      return (\n        <ItemWrapper>\n          <ImageWrapper>\n            <img src={record.image} alt={record.title} />\n          </ImageWrapper>\n\n          <ItemDetails>\n            <ItemName>{record.title}</ItemName>\n            <ItemSize>{record.weight}</ItemSize>\n            <ItemPrice>${record.price}</ItemPrice>\n          </ItemDetails>\n        </ItemWrapper>\n      );\n    },\n  },\n  {\n    title: (\n      <FormattedMessage id=\"intlTableColTitle2\" defaultMessage=\"Quantity\" />\n    ),\n    dataIndex: 'quantity',\n    key: 'quantity',\n    align: 'center',\n    width: 100,\n  },\n  {\n    title: <FormattedMessage id=\"intlTableColTitle3\" defaultMessage=\"Price\" />,\n    dataIndex: '',\n    key: 'price',\n    align: 'right',\n    width: 100,\n    render: (text, record) => {\n      return <p>${record.total}</p>;\n    },\n  },\n];\n\nconst OrdersContent: React.FC<{}> = () => {\n  const [order, setOrder] = useState(null);\n  const [active, setActive] = useState('');\n\n  const [targetRef, size] = useComponentSize();\n  const orderListHeight = size.height - 79;\n  const { data, error, loading } = useQuery(GET_ORDERS, {\n    variables: {\n      limit: 7,\n      user: 1,\n    },\n  });\n\n  useEffect(() => {\n    if (data && data.orders && data.orders.length !== 0) {\n      setOrder(data.orders[0]);\n      setActive(data.orders[0].id);\n    }\n  }, [data && data.orders]);\n\n  if (loading) {\n    return <div>loading...</div>;\n  }\n\n  if (error) return <div>{error.message}</div>;\n\n  const handleClick = (order: any) => {\n    setOrder(order);\n    setActive(order.id);\n  };\n\n  return (\n    <OrderBox>\n      <DesktopView>\n        <OrderListWrapper style={{ height: size.height }}>\n          <Title style={{ padding: '0 20px' }}>\n            <FormattedMessage\n              id=\"intlOrderPageTitle\"\n              defaultMessage=\"My Order\"\n            />\n          </Title>\n\n          <Scrollbars\n            universal\n            autoHide\n            autoHeight\n            autoHeightMin={420}\n            autoHeightMax={isNaN(orderListHeight) ? 500 : orderListHeight}\n          >\n            <OrderList>\n              {data.orders.length !== 0 ? (\n                data.orders.map((current: any) => (\n                  <OrderCard\n                    key={current.id}\n                    orderId={current.id}\n                    className={current.id === active ? 'active' : ''}\n                    status={progressData[current.status - 1]}\n                    date={current.date}\n                    deliveryTime={current.deliveryTime}\n                    amount={current.amount}\n                    onClick={() => {\n                      handleClick(current);\n                    }}\n                  />\n                ))\n              ) : (\n                <NoOrderFound>\n                  <FormattedMessage\n                    id=\"intlNoOrderFound\"\n                    defaultMessage=\"No order found\"\n                  />\n                </NoOrderFound>\n              )}\n            </OrderList>\n          </Scrollbars>\n        </OrderListWrapper>\n\n        <OrderDetailsWrapper ref={targetRef}>\n          <Title style={{ padding: '0 20px' }}>\n            <FormattedMessage\n              id=\"orderDetailsText\"\n              defaultMessage=\"Order Details\"\n            />\n          </Title>\n          {order && order.id && (\n            <OrderDetails\n              progressStatus={order.status}\n              progressData={progressData}\n              address={order.deliveryAddress}\n              subtotal={order.subtotal}\n              discount={order.discount}\n              deliveryFee={order.deliveryFee}\n              grandTotal={order.amount}\n              tableData={order.products}\n              columns={orderTableColumns}\n            />\n          )}\n        </OrderDetailsWrapper>\n      </DesktopView>\n\n      <MobileView>\n        <OrderList>\n          <OrderCardMobile\n            orders={data.orders}\n            className={order && order.id === active ? 'active' : ''}\n            progressData={progressData}\n            columns={orderTableColumns}\n            onClick={() => {\n              handleClick(order);\n            }}\n          />\n        </OrderList>\n      </MobileView>\n    </OrderBox>\n  );\n};\n\nexport default OrdersContent;\n"]},"metadata":{},"sourceType":"module"}
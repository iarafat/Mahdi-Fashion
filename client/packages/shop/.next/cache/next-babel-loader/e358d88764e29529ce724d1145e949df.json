{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from 'react';\nimport Router, { useRouter } from 'next/router';\nimport { FormattedMessage } from 'react-intl';\nimport Popover from 'components/popover/popover';\nimport Logo from 'layouts/logo/logo';\nimport { MenuDown } from 'assets/icons/MenuDown';\nimport { CATEGORY_MENU_ITEMS, CATEGORY_MENU } from 'site-settings/site-navigation';\nimport * as categoryMenuIcons from 'assets/icons/category-menu-icons';\nimport { MainMenu, MenuItem, SelectedItem, Icon, Arrow, LeftMenuBox } from './left-menu.style';\n\nvar CategoryIcon = function CategoryIcon(_ref) {\n  var name = _ref.name;\n  var TagName = categoryMenuIcons[name];\n  return !!TagName ? __jsx(TagName, null) : __jsx(\"p\", null, \" \");\n};\n\nvar CategoryMenu = function CategoryMenu(props) {\n  var _useState = useState([]),\n      typeMenu = _useState[0],\n      setTypeMenu = _useState[1];\n\n  var handleOnClick = function handleOnClick(item) {\n    if (item.dynamic) {\n      Router.push('/[type]', \"\".concat(item.href));\n      props.onClick(item);\n      return;\n    }\n\n    Router.push(\"\".concat(item.href));\n    props.onClick(item);\n  };\n\n  useEffect(function () {\n    CATEGORY_MENU().then(function (res) {\n      setTypeMenu(res);\n    });\n    return;\n  }, []);\n  return __jsx(\"div\", {\n    style: {\n      display: 'flex',\n      flexDirection: 'column'\n    }\n  }, typeMenu.map(function (item) {\n    return __jsx(MenuItem, _extends({\n      key: item.id\n    }, props, {\n      onClick: function onClick() {\n        return handleOnClick(item);\n      }\n    }), __jsx(CategoryIcon, {\n      name: item.icon\n    }), __jsx(FormattedMessage, {\n      id: item.id,\n      defaultMessage: item.defaultMessage\n    }));\n  }));\n};\n\nexport var LeftMenu = function LeftMenu(_ref2) {\n  var logo = _ref2.logo;\n\n  var _useState2 = useState([]),\n      typeMenu = _useState2[0],\n      setTypeMenu = _useState2[1];\n\n  useEffect(function () {\n    CATEGORY_MENU().then(function (res) {\n      setTypeMenu(res);\n    });\n    return;\n  }, []);\n  var router = useRouter();\n  var initialMenu = typeMenu.find(function (item) {\n    return item.href == router.asPath;\n  });\n\n  var _React$useState = React.useState(initialMenu !== null && initialMenu !== void 0 ? initialMenu : CATEGORY_MENU_ITEMS[0]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      activeMenu = _React$useState2[0],\n      setActiveMenu = _React$useState2[1];\n\n  return __jsx(LeftMenuBox, null, __jsx(Logo, {\n    imageUrl: logo,\n    alt: 'Shop Logo',\n    onClick: function onClick() {\n      return setActiveMenu(CATEGORY_MENU_ITEMS[0]);\n    }\n  }), __jsx(MainMenu, null, __jsx(Popover, {\n    className: \"right\",\n    handler: __jsx(SelectedItem, null, __jsx(\"span\", null, __jsx(Icon, null, __jsx(CategoryIcon, {\n      name: activeMenu === null || activeMenu === void 0 ? void 0 : activeMenu.icon\n    })), __jsx(\"span\", null, __jsx(FormattedMessage, {\n      id: activeMenu === null || activeMenu === void 0 ? void 0 : activeMenu.id,\n      defaultMessage: activeMenu === null || activeMenu === void 0 ? void 0 : activeMenu.defaultMessage\n    }))), __jsx(Arrow, null, __jsx(MenuDown, null))),\n    content: __jsx(CategoryMenu, {\n      onClick: setActiveMenu\n    })\n  })));\n};","map":null,"metadata":{},"sourceType":"module"}
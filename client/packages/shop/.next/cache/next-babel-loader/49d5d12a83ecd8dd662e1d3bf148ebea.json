{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport Link from 'next/link';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Input } from 'components/forms/input';\nimport { Button, Wrapper, Container, Heading, SubHeading, HelperText, Offer // Input,\n, LinkButton } from './authentication-form.style';\nimport { closeModal } from '@redq/reuse-modal';\nimport { AuthContext } from 'contexts/auth/auth.context';\nimport { FormattedMessage, useIntl } from 'react-intl';\nimport { SIGNUP_MUTATION } from 'graphql/mutation/signup';\nexport default function SignOutModal() {\n  const intl = useIntl();\n  const {\n    authState,\n    authDispatch\n  } = useContext(AuthContext);\n\n  const toggleSignInForm = () => {\n    authDispatch({\n      type: 'SIGNIN'\n    });\n  }; //signup\n\n\n  const [phone, setPhone] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [signupMeMutation, {\n    loading,\n    error\n  }] = useMutation(SIGNUP_MUTATION, {\n    onCompleted: data => {\n      console.log(data);\n      const {\n        access_token\n      } = data.signUp;\n\n      if (false) {\n        localStorage.setItem('access_token', `${access_token}`);\n        authDispatch({\n          type: 'SIGNIN_SUCCESS'\n        });\n        closeModal();\n      }\n    },\n    onError: error => {\n      setPhone('');\n      setPassword('');\n      console.log(error);\n    }\n  });\n  return __jsx(Wrapper, null, __jsx(Container, null, __jsx(Heading, null, __jsx(FormattedMessage, {\n    id: \"signUpBtnText\",\n    defaultMessage: \"Sign Up\"\n  })), __jsx(SubHeading, null, __jsx(FormattedMessage, {\n    id: \"signUpText\",\n    defaultMessage: \"Every fill is required in sign up\"\n  })), __jsx(\"form\", {\n    method: \"post\",\n    onSubmit: async e => {\n      e.preventDefault();\n      await signupMeMutation({\n        variables: {\n          phone,\n          password\n        }\n      });\n    }\n  }, __jsx(Input, {\n    type: \"text\",\n    name: \"phone\",\n    value: phone,\n    onChange: e => setPhone(e.target.value),\n    placeholder: intl.formatMessage({\n      id: 'emailAddressPlaceholder',\n      defaultMessage: 'Email Address or Contact No.'\n    }),\n    height: \"48px\",\n    backgroundColor: \"#F7F7F7\",\n    mb: \"10px\"\n  }), __jsx(Input, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: intl.formatMessage({\n      id: 'passwordPlaceholder',\n      defaultMessage: 'Password (min 6 characters)'\n    }),\n    height: \"48px\",\n    backgroundColor: \"#F7F7F7\",\n    mb: \"10px\"\n  }), __jsx(HelperText, {\n    style: {\n      padding: '20px 0 30px'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"signUpText\",\n    defaultMessage: \"By signing up, you agree to Mahdi Fashion's\"\n  }), \"\\xA0\", __jsx(Link, {\n    href: \"/\"\n  }, __jsx(\"a\", null, __jsx(FormattedMessage, {\n    id: \"termsConditionText\",\n    defaultMessage: \"Terms & Condition\"\n  })))), __jsx(Button, {\n    variant: \"primary\",\n    size: \"big\",\n    width: \"100%\",\n    type: \"submit\"\n  }, __jsx(FormattedMessage, {\n    id: \"continueBtn\",\n    defaultMessage: \"Continue\"\n  }))), loading && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\"\n    }\n  }, \"Loading...\"), error && __jsx(\"p\", {\n    style: {\n      marginTop: \"15px\"\n    }\n  }, \"Please try again\"), __jsx(Offer, {\n    style: {\n      padding: '20px 0'\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"alreadyHaveAccount\",\n    defaultMessage: \"Already have an account?\"\n  }), ' ', __jsx(LinkButton, {\n    onClick: toggleSignInForm\n  }, __jsx(FormattedMessage, {\n    id: \"loginBtnText\",\n    defaultMessage: \"Login\"\n  })))));\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/home/arafat/codes/pickbazar-template/packages/shop/src/features/user-profile/settings/settings.tsx\";\nvar __jsx = React.createElement;\nimport React, { useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport StripePaymentForm from 'features/payment/stripe-form';\nimport { SettingsForm, SettingsFormContent, HeadingSection, Title // Input,\n, Row, ButtonGroup } from './settings.style';\nimport RadioGroup from 'components/radio-group/radio-group';\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport UpdateAddress from 'components/address-card/address-card';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { Button } from 'components/button/button';\nimport { Input } from 'components/forms/input';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from 'components/forms/label';\n\nconst SettingsContent = ({\n  deviceType\n}) => {\n  const {\n    state,\n    dispatch\n  } = useContext(ProfileContext);\n  const [updateMeMutation] = useMutation(UPDATE_ME);\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n  const {\n    address,\n    contact,\n    card\n  } = state;\n\n  const handleChange = e => {\n    const {\n      value,\n      name\n    } = e.target;\n    dispatch({\n      type: 'HANDLE_ON_INPUT_CHANGE',\n      payload: {\n        value,\n        field: name\n      }\n    });\n  }; // Add or edit modal\n\n\n  const handleModal = (modalComponent, modalProps = {}, className = 'add-address-modal') => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: {\n        item: modalProps\n      }\n    });\n  };\n\n  const handleEditDelete = async (item, type, name) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      console.log(name, item, type, 'delete');\n\n      switch (name) {\n        case 'payment':\n          dispatch({\n            type: 'DELETE_CARD',\n            payload: item.id\n          });\n          return await deletePaymentCardMutation({\n            variables: {\n              cardId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'contact':\n          dispatch({\n            type: 'DELETE_CONTACT',\n            payload: item.id\n          });\n          return await deleteContactMutation({\n            variables: {\n              contactId: JSON.stringify(item.id)\n            }\n          });\n\n        case 'address':\n          dispatch({\n            type: 'DELETE_ADDRESS',\n            payload: item.id\n          });\n          return await deleteAddressMutation({\n            variables: {\n              addressId: JSON.stringify(item.id)\n            }\n          });\n\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handleSave = async () => {\n    const {\n      name,\n      email\n    } = state;\n    await updateMeMutation({\n      variables: {\n        meInput: JSON.stringify({\n          name,\n          email\n        })\n      }\n    });\n  };\n\n  return __jsx(SettingsForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profilePageTitle\",\n    defaultMessage: \"Your Profile\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }))), __jsx(Row, {\n    style: {\n      alignItems: 'flex-end',\n      marginBottom: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileNameField\",\n    defaultMessage: \"Your Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  })), __jsx(Input, {\n    type: \"text\",\n    label: \"Name\",\n    name: \"name\",\n    value: state.name,\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\",\n    height: \"48px\" // intlInputLabelId=\"profileNameField\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 5,\n    md: 5,\n    lg: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, __jsx(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileEmailField\",\n    defaultMessage: \"Your Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 15\n    }\n  })), __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    label: \"Email Address\",\n    value: state.email,\n    onChange: handleChange,\n    backgroundColor: \"#F7F7F7\" // intlInputLabelId=\"profileEmailField\"\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  })), __jsx(Col, {\n    xs: 12,\n    sm: 2,\n    md: 2,\n    lg: 2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 11\n    }\n  }, __jsx(Button, {\n    size: \"big\",\n    style: {\n      width: '100%'\n    },\n    onClick: handleSave,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"profileSaveBtn\",\n    defaultMessage: \"Save\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 15\n    }\n  })))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"contactNumberTItle\",\n    defaultMessage: \"Contact Numbers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 19\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroup, {\n    items: contact,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.type,\n      content: item.number,\n      checked: item.type === 'primary',\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_CONTACT',\n        payload: item.id.toString()\n      }),\n      name: \"contact\",\n      onEdit: () => handleEditDelete(item, 'edit', 'contact'),\n      onDelete: () => handleEditDelete(item, 'delete', 'contact'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => handleModal(UpdateContact, {}, 'add-contact-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addContactBtn\",\n      defaultMessage: \"Add Contact\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  }))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    style: {\n      position: 'relative'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"deliveryAddresTitle\",\n    defaultMessage: \"Delivery Address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 19\n    }\n  }))), __jsx(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }, __jsx(RadioGroup, {\n    items: address,\n    component: item => __jsx(RadioCard, {\n      id: item.id,\n      key: item.id,\n      title: item.name,\n      content: item.info,\n      name: \"address\",\n      checked: item.type === 'primary',\n      onChange: () => dispatch({\n        type: 'SET_PRIMARY_ADDRESS',\n        payload: item.id.toString()\n      }),\n      onEdit: () => handleEditDelete(item, 'edit', 'address'),\n      onDelete: () => handleEditDelete(item, 'delete', 'address'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }),\n    secondaryComponent: __jsx(Button, {\n      size: \"big\",\n      variant: \"outlined\",\n      type: \"button\",\n      className: \"add-button\",\n      onClick: () => handleModal(UpdateAddress, {}, 'add-address-modal'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 21\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"addAddressBtn\",\n      defaultMessage: \"Add Address\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 23\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 17\n    }\n  }))))), __jsx(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }\n  }, __jsx(Col, {\n    xs: 12,\n    sm: 12,\n    md: 12,\n    lg: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 11\n    }\n  }, __jsx(SettingsFormContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 13\n    }\n  }, __jsx(HeadingSection, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 15\n    }\n  }, __jsx(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 17\n    }\n  }, __jsx(FormattedMessage, {\n    id: \"paymentCardTitle\",\n    defaultMessage: \"Payments Card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 19\n    }\n  }))), __jsx(PaymentGroup, {\n    name: \"payment\",\n    deviceType: deviceType,\n    items: card,\n    onEditDeleteField: (item, type) => handleEditDelete(item, type, 'payment'),\n    onChange: item => dispatch({\n      type: 'SET_PRIMARY_CARD',\n      payload: item.id.toString()\n    }),\n    handleAddNewCard: () => {\n      handleModal(StripePaymentForm, {\n        buttonText: 'Add Card'\n      }, 'add-address-modal stripe-modal');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default SettingsContent;","map":{"version":3,"sources":["/home/arafat/codes/pickbazar-template/packages/shop/src/features/user-profile/settings/settings.tsx"],"names":["React","useContext","useMutation","Col","openModal","RadioCard","ProfileContext","DELETE_ADDRESS","DELETE_CARD","DELETE_CONTACT","StripePaymentForm","SettingsForm","SettingsFormContent","HeadingSection","Title","Row","ButtonGroup","RadioGroup","PaymentGroup","UpdateAddress","UpdateContact","Button","Input","UPDATE_ME","FormattedMessage","Label","SettingsContent","deviceType","state","dispatch","updateMeMutation","deleteContactMutation","deleteAddressMutation","deletePaymentCardMutation","address","contact","card","handleChange","e","value","name","target","type","payload","field","handleModal","modalComponent","modalProps","className","show","config","width","height","enableResizing","disableDragging","closeOnClickOutside","component","componentProps","item","handleEditDelete","console","log","id","variables","cardId","JSON","stringify","contactId","addressId","handleSave","email","meInput","alignItems","marginBottom","number","toString","position","info","buttonText"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\nimport { useMutation } from '@apollo/react-hooks';\nimport { Col } from 'react-styled-flexboxgrid';\nimport { openModal } from '@redq/reuse-modal';\nimport RadioCard from 'components/radio-card/radio-card';\nimport { ProfileContext } from 'contexts/profile/profile.context';\nimport { DELETE_ADDRESS } from 'graphql/mutation/address';\nimport { DELETE_CARD } from 'graphql/mutation/card';\nimport { DELETE_CONTACT } from 'graphql/mutation/contact';\nimport StripePaymentForm from 'features/payment/stripe-form';\nimport {\n  SettingsForm,\n  SettingsFormContent,\n  HeadingSection,\n  Title,\n  // Input,\n  Row,\n  ButtonGroup,\n} from './settings.style';\nimport RadioGroup from 'components/radio-group/radio-group';\nimport PaymentGroup from 'components/payment-group/payment-group';\nimport UpdateAddress from 'components/address-card/address-card';\nimport UpdateContact from 'components/contact-card/contact-card';\nimport { Button } from 'components/button/button';\nimport { Input } from 'components/forms/input';\nimport { UPDATE_ME } from 'graphql/mutation/me';\nimport { FormattedMessage } from 'react-intl';\nimport { Label } from 'components/forms/label';\n\ntype SettingsContentProps = {\n  deviceType?: {\n    mobile: boolean;\n    tablet: boolean;\n    desktop: boolean;\n  };\n};\n\nconst SettingsContent: React.FC<SettingsContentProps> = ({ deviceType }) => {\n  const { state, dispatch } = useContext(ProfileContext);\n  const [updateMeMutation] = useMutation(UPDATE_ME);\n  const [deleteContactMutation] = useMutation(DELETE_CONTACT);\n  const [deleteAddressMutation] = useMutation(DELETE_ADDRESS);\n  const [deletePaymentCardMutation] = useMutation(DELETE_CARD);\n\n  const { address, contact, card } = state;\n\n  const handleChange = (e) => {\n    const { value, name } = e.target;\n    dispatch({\n      type: 'HANDLE_ON_INPUT_CHANGE',\n      payload: { value, field: name },\n    });\n  };\n  // Add or edit modal\n  const handleModal = (\n    modalComponent: any,\n    modalProps = {},\n    className: string = 'add-address-modal'\n  ) => {\n    openModal({\n      show: true,\n      config: {\n        width: 360,\n        height: 'auto',\n        enableResizing: false,\n        disableDragging: true,\n        className: className,\n      },\n      closeOnClickOutside: true,\n      component: modalComponent,\n      componentProps: { item: modalProps },\n    });\n  };\n\n  const handleEditDelete = async (item: any, type: string, name: string) => {\n    if (type === 'edit') {\n      const modalComponent = name === 'address' ? UpdateAddress : UpdateContact;\n      handleModal(modalComponent, item);\n    } else {\n      console.log(name, item, type, 'delete');\n      switch (name) {\n        case 'payment':\n          dispatch({ type: 'DELETE_CARD', payload: item.id });\n\n          return await deletePaymentCardMutation({\n            variables: { cardId: JSON.stringify(item.id) },\n          });\n        case 'contact':\n          dispatch({ type: 'DELETE_CONTACT', payload: item.id });\n\n          return await deleteContactMutation({\n            variables: { contactId: JSON.stringify(item.id) },\n          });\n        case 'address':\n          dispatch({ type: 'DELETE_ADDRESS', payload: item.id });\n\n          return await deleteAddressMutation({\n            variables: { addressId: JSON.stringify(item.id) },\n          });\n        default:\n          return false;\n      }\n    }\n  };\n\n  const handleSave = async () => {\n    const { name, email } = state;\n    await updateMeMutation({\n      variables: { meInput: JSON.stringify({ name, email }) },\n    });\n  };\n\n  return (\n    <SettingsForm>\n      <SettingsFormContent>\n        <HeadingSection>\n          <Title>\n            <FormattedMessage\n              id='profilePageTitle'\n              defaultMessage='Your Profile'\n            />\n          </Title>\n        </HeadingSection>\n        <Row style={{ alignItems: 'flex-end', marginBottom: '50px' }}>\n          <Col xs={12} sm={5} md={5} lg={5}>\n            <Label>\n              <FormattedMessage\n                id='profileNameField'\n                defaultMessage='Your Name'\n              />\n            </Label>\n            <Input\n              type='text'\n              label='Name'\n              name='name'\n              value={state.name}\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              height='48px'\n              // intlInputLabelId=\"profileNameField\"\n            />\n          </Col>\n\n          <Col xs={12} sm={5} md={5} lg={5}>\n            <Label>\n              <FormattedMessage\n                id='profileEmailField'\n                defaultMessage='Your Email'\n              />\n            </Label>\n            <Input\n              type='email'\n              name='email'\n              label='Email Address'\n              value={state.email}\n              onChange={handleChange}\n              backgroundColor='#F7F7F7'\n              // intlInputLabelId=\"profileEmailField\"\n            />\n          </Col>\n\n          <Col xs={12} sm={2} md={2} lg={2}>\n            <Button size='big' style={{ width: '100%' }} onClick={handleSave}>\n              <FormattedMessage id='profileSaveBtn' defaultMessage='Save' />\n            </Button>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='contactNumberTItle'\n                    defaultMessage='Contact Numbers'\n                  />\n                </Title>\n              </HeadingSection>\n              <ButtonGroup>\n                <RadioGroup\n                  items={contact}\n                  component={(item: any) => (\n                    <RadioCard\n                      id={item.id}\n                      key={item.id}\n                      title={item.type}\n                      content={item.number}\n                      checked={item.type === 'primary'}\n                      onChange={() =>\n                        dispatch({\n                          type: 'SET_PRIMARY_CONTACT',\n                          payload: item.id.toString(),\n                        })\n                      }\n                      name='contact'\n                      onEdit={() => handleEditDelete(item, 'edit', 'contact')}\n                      onDelete={() =>\n                        handleEditDelete(item, 'delete', 'contact')\n                      }\n                    />\n                  )}\n                  secondaryComponent={\n                    <Button\n                      size='big'\n                      variant='outlined'\n                      type='button'\n                      className='add-button'\n                      onClick={() =>\n                        handleModal(UpdateContact, {}, 'add-contact-modal')\n                      }\n                    >\n                      <FormattedMessage\n                        id='addContactBtn'\n                        defaultMessage='Add Contact'\n                      />\n                    </Button>\n                  }\n                />\n              </ButtonGroup>\n            </SettingsFormContent>\n          </Col>\n        </Row>\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12} style={{ position: 'relative' }}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='deliveryAddresTitle'\n                    defaultMessage='Delivery Address'\n                  />\n                </Title>\n              </HeadingSection>\n              <ButtonGroup>\n                <RadioGroup\n                  items={address}\n                  component={(item: any) => (\n                    <RadioCard\n                      id={item.id}\n                      key={item.id}\n                      title={item.name}\n                      content={item.info}\n                      name='address'\n                      checked={item.type === 'primary'}\n                      onChange={() =>\n                        dispatch({\n                          type: 'SET_PRIMARY_ADDRESS',\n                          payload: item.id.toString(),\n                        })\n                      }\n                      onEdit={() => handleEditDelete(item, 'edit', 'address')}\n                      onDelete={() =>\n                        handleEditDelete(item, 'delete', 'address')\n                      }\n                    />\n                  )}\n                  secondaryComponent={\n                    <Button\n                      size='big'\n                      variant='outlined'\n                      type='button'\n                      className='add-button'\n                      onClick={() =>\n                        handleModal(UpdateAddress, {}, 'add-address-modal')\n                      }\n                    >\n                      <FormattedMessage\n                        id='addAddressBtn'\n                        defaultMessage='Add Address'\n                      />\n                    </Button>\n                  }\n                />\n              </ButtonGroup>\n            </SettingsFormContent>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col xs={12} sm={12} md={12} lg={12}>\n            <SettingsFormContent>\n              <HeadingSection>\n                <Title>\n                  <FormattedMessage\n                    id='paymentCardTitle'\n                    defaultMessage='Payments Card'\n                  />\n                </Title>\n              </HeadingSection>\n              <PaymentGroup\n                name='payment'\n                deviceType={deviceType}\n                items={card}\n                onEditDeleteField={(item: any, type: string) =>\n                  handleEditDelete(item, type, 'payment')\n                }\n                onChange={(item: any) =>\n                  dispatch({\n                    type: 'SET_PRIMARY_CARD',\n                    payload: item.id.toString(),\n                  })\n                }\n                handleAddNewCard={() => {\n                  handleModal(\n                    StripePaymentForm,\n                    { buttonText: 'Add Card' },\n                    'add-address-modal stripe-modal'\n                  );\n                }}\n              />\n            </SettingsFormContent>\n          </Col>\n        </Row>\n      </SettingsFormContent>\n    </SettingsForm>\n  );\n};\n\nexport default SettingsContent;\n"]},"metadata":{},"sourceType":"module"}
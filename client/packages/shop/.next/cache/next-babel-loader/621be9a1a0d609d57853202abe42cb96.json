{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Link, Element } from 'react-scroll';\nimport { Button } from 'components/button/button';\nimport { ProductDetailsWrapper, ProductPreview, RestaurantMeta, RestaurantNameAddress, RestaurantName, RestaurantAddress, RestaurantOtherInfos, InfoBlock, Label, Infos, DeliveryOpt, CategoriesWrapper, CategoriesInner, MainContent, MenuContainer, ItemCategoryWrapper, ItemCategoryName, ItemWrapper, ItemNameDetails, ItemName, ItemDetails, ItemNamePricing, HelpText, ItemPrice, CartWrapper } from './product-details-three.style';\nimport { CURRENCY } from 'utils/constant';\nimport FixedCart from 'features/carts/fixed-cart';\nimport FixedCartPopup from 'features/carts/fixed-cart-popup';\nimport { FormattedMessage } from 'react-intl';\nimport Sticky from 'react-stickynode';\nimport { groupBy } from 'utils/groupBy';\nimport { useCart } from 'contexts/cart/use-cart';\nimport { PlusOutline } from 'assets/icons/PlusOutline';\n\nconst ProductDetails = ({\n  product,\n  deviceType\n}) => {\n  var _data$categories, _data$deliveryDetails, _data$deliveryDetails2, _data$deliveryDetails3;\n\n  const {\n    addItem,\n    clearCart,\n    toggleRestaurant,\n    isInCart\n  } = useCart();\n\n  const handleAddClick = values => {\n    addItem(values);\n  };\n\n  const checkoutStatus = React.useRef(null);\n  const data = product;\n  React.useEffect(() => {\n    clearCart();\n    return () => {\n      if (checkoutStatus.current === null) {\n        clearCart();\n      }\n    };\n  }, []);\n  const productGroups = groupBy(data === null || data === void 0 ? void 0 : data.products, 'type');\n  const headerOffset = deviceType.mobile || deviceType.tablet ? -137 : -177;\n  return __jsx(React.Fragment, null, __jsx(ProductDetailsWrapper, null, __jsx(ProductPreview, null, __jsx(\"img\", {\n    src: data.previewUrl,\n    alt: data.name\n  })), __jsx(\"div\", {\n    id: \"cart-sticky\"\n  }, __jsx(RestaurantMeta, {\n    id: \"restaurantMeta\"\n  }, __jsx(RestaurantNameAddress, null, __jsx(RestaurantName, null, data.name), __jsx(RestaurantAddress, null, data.address)), __jsx(RestaurantOtherInfos, null, __jsx(InfoBlock, null, __jsx(Label, null, __jsx(FormattedMessage, {\n    id: \"cuisineText\",\n    defaultMessage: \"Cuisine\"\n  })), __jsx(Infos, null, data === null || data === void 0 ? void 0 : (_data$categories = data.categories) === null || _data$categories === void 0 ? void 0 : _data$categories.join(', '))), __jsx(InfoBlock, null, __jsx(Label, null, __jsx(FormattedMessage, {\n    id: \"minOrderText\",\n    defaultMessage: \"Min Order\"\n  })), __jsx(Infos, null, CURRENCY, data === null || data === void 0 ? void 0 : (_data$deliveryDetails = data.deliveryDetails) === null || _data$deliveryDetails === void 0 ? void 0 : _data$deliveryDetails.minimumOrder)), __jsx(DeliveryOpt, null, (data === null || data === void 0 ? void 0 : (_data$deliveryDetails2 = data.deliveryDetails) === null || _data$deliveryDetails2 === void 0 ? void 0 : _data$deliveryDetails2.isFree) ? '' : CURRENCY, data === null || data === void 0 ? void 0 : (_data$deliveryDetails3 = data.deliveryDetails) === null || _data$deliveryDetails3 === void 0 ? void 0 : _data$deliveryDetails3.charge, __jsx(\"br\", null), ' ', __jsx(FormattedMessage, {\n    id: \"deliveryText\",\n    defaultMessage: \"Delivery\"\n  })))), __jsx(Sticky, {\n    top: deviceType.mobile || deviceType.tablet ? 68 : 78,\n    innerZ: 999\n  }, __jsx(CategoriesWrapper, null, __jsx(CategoriesInner, null, Object.keys(productGroups).map((item, index) => __jsx(Link, {\n    activeClass: \"active\",\n    className: \"category\",\n    to: Object.keys(productGroups)[index],\n    offset: headerOffset,\n    spy: true,\n    smooth: true,\n    duration: 500,\n    key: index\n  }, item)))))), __jsx(MainContent, null, __jsx(MenuContainer, null, Object.values(productGroups).map((items, idx) => __jsx(Element, {\n    name: Object.keys(productGroups)[idx],\n    key: idx\n  }, __jsx(ItemCategoryWrapper, {\n    id: Object.keys(productGroups)[idx]\n  }, __jsx(ItemCategoryName, null, Object.keys(productGroups)[idx])), items.map(item => __jsx(ItemWrapper, {\n    key: item.id\n  }, __jsx(ItemNameDetails, null, __jsx(ItemName, null, item.name), __jsx(ItemDetails, null, item.description)), __jsx(ItemNamePricing, null, __jsx(HelpText, null, __jsx(FormattedMessage, {\n    id: \"fromText\",\n    defaultMessage: \"From\"\n  }), \"\\xA0\"), __jsx(ItemPrice, null, CURRENCY, item.price)), __jsx(Button, {\n    variant: \"select\",\n    type: \"button\",\n    className: isInCart(item.id) ? 'selected' : '',\n    onClick: () => handleAddClick(item)\n  }, __jsx(PlusOutline, {\n    width: \"14px\",\n    height: \"14px\"\n  }))))))), __jsx(CartWrapper, null, __jsx(Sticky, {\n    top: \"#cart-sticky\",\n    innerZ: 999\n  }, __jsx(FixedCart, {\n    scrollbarHeight: \"100vh\",\n    className: \"fixedCartBox\",\n    style: {\n      height: `calc(100vh - 193px)`\n    },\n    onCheckout: () => {\n      toggleRestaurant();\n      checkoutStatus.current = true;\n    }\n  }))), __jsx(FixedCartPopup, {\n    onCheckout: () => {\n      toggleRestaurant();\n      checkoutStatus.current = true;\n    }\n  }))));\n};\n\nexport default ProductDetails;","map":null,"metadata":{},"sourceType":"module"}
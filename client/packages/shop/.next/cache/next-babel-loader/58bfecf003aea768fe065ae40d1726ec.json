{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport dynamic from 'next/dynamic';\nimport { useRouter } from 'next/router';\nimport Sticky from 'react-stickynode';\nimport { useAppState } from 'contexts/app/app.provider';\nimport Header from './header/header';\nimport { LayoutWrapper } from './layout.style';\nimport { isCategoryPage } from './is-home-page';\nconst MobileHeader = dynamic(() => import('./header/mobile-header'), {\n  ssr: false,\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('./header/mobile-header')],\n    modules: ['./header/mobile-header']\n  }\n});\n\nconst Layout = ({\n  className,\n  children,\n  // deviceType: { mobile, tablet, desktop },\n  token\n}) => {\n  const {\n    0: typeMenu,\n    1: setTypeMenu\n  } = useState([]);\n  const {\n    0: isHome,\n    1: setHome\n  } = useState(true);\n  const isSticky = useAppState('isSticky');\n  const {\n    pathname,\n    query\n  } = useRouter();\n  const type = pathname === '/restaurant' ? 'restaurant' : query.type;\n  const isHomePage = isCategoryPage(type);\n  /*const newTypeArry = [];\n  const { data, error, loading } = useQuery(\n    GET_TYPE,\n    {\n      variables: {\n        searchText: ''\n      }\n    }\n  );\n  \n  useEffect(() => {\n   \n    return;\n  }, []);\n  \n  if (loading) {\n    return <ErrorMessage message={'Loading...'} />\n  };\n   if (error) {\n    return (\n      <ErrorMessage message={error.message} />\n    );\n  };\n   if(data){\n    data.types.items.map((item: any, index: any) => {\n      newTypeArry.push(item.href)\n    })\n    if(newTypeArry.includes(`/${type}`)){\n      setHome(true)\n    }else{\n      setHome(false)\n    }  \n  }  */\n\n  return __jsx(LayoutWrapper, {\n    className: `layoutWrapper ${className}`\n  }, __jsx(Sticky, {\n    enabled: isSticky,\n    innerZ: 1001\n  }, __jsx(MobileHeader, {\n    className: `${isSticky ? 'sticky' : 'unSticky'} ${isHomePage ? 'home' : ''} desktop`\n  }), __jsx(Header, {\n    className: `${isSticky && isHomePage ? 'sticky' : 'unSticky'} ${isHomePage ? 'home' : ''}`\n  })), children);\n};\n\nexport default Layout;","map":null,"metadata":{},"sourceType":"module"}
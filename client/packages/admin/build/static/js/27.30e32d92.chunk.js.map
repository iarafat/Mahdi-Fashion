{"version":3,"sources":["containers/TypeForm/ActionWrapper.tsx","containers/Types/Types.tsx"],"names":["Icon","icon","width","height","Component","AllIcons","hasOwnProperty","GET_TYPES","gql","DELETE_TYPE","ActionWrapper","itemData","itemsOffset","dispatch","useDrawerDispatch","openDrawer","React","useCallback","type","drawerComponent","data","useMutation","update","cache","types","readQuery","query","variables","offset","writeQuery","__typename","items","filter","item","id","hasMore","length","totalCount","deleteType","onClick","style","marginRight","cursor","confirm","color","Col","withStyle","Column","marginBottom","Row","Rows","alignItems","prevButtonDisabledStyles","backgroundColor","nextButtonDisabledStyles","marginLeft","Coupons","useState","search","setSearch","setOffset","useQuery","error","refetch","message","handlePreviousDisabled","handleNextDisabled","fluid","md","boxShadow","Input","value","placeholder","onChange","event","currentTarget","searchText","clearable","Button","startEnhancer","overrides","BaseButton","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","$gridTemplateColumns","map","index","Fragment","key","name","slug","src","ADMIN_IMAGE_HOST","image","dayjs","created_at","format","NoResult","hideButton","gridColumnStart","gridColumnEnd","display","textAlign","marginTop","disabled"],"mappings":"mmCAgBA,MAAMA,EAAO,EAAEC,OAAMC,QAAQ,OAAQC,SAAS,WAC1C,IAAIC,EAAYC,IAASC,eAAeL,GAAQI,IAASJ,GAAQ,OACjE,OAAO,kBAACG,EAAD,CAAWF,MAAOA,EAAOC,OAAQA,KAGtCI,EAAYC,IAAH,KA0BTC,EAAcD,IAAH,KA8EFE,MAnEV,IAIO,IAHHC,EAGE,EAHFA,SACDC,EAEG,EAFHA,YAEG,0CACH,MAAMC,EAAWC,cACXC,EAAaC,IAAMC,YACrB,KACIJ,EAAS,CACLK,KAAM,cACNC,gBAAiB,mBACjBC,KAAMT,KAGd,CAACE,EAAUF,IAVZ,EAmCkBU,YAAYZ,EAAa,CAC1Ca,OAvBsBC,IAAW,MAC1BC,EAASD,EAAME,UAAU,CAC5BC,MAAOnB,EACPoB,UAAW,CAACC,OAAQhB,KAFjBY,MAKPD,EAAMM,WAAW,CACbH,MAAOnB,EACPoB,UAAW,CAACC,OAAQhB,GACpBQ,KAAM,CACFI,MAAO,CACHM,WAAYN,EAAMM,WAClBC,MAAOP,EAAMO,MAAMC,OAAQC,GAChBA,EAAKC,KAAOvB,EAASuB,IAEhCC,QAASX,EAAMO,MAAMK,OAAS,GAAK,GACnCC,WAAYb,EAAMO,MAAMK,OAAS,SAM1CE,EAnCJ,oBA+CH,OACI,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAaC,QAASxB,EAAYyB,MAAO,CAACC,YAAa,OAAQC,OAAQ,YACnE,kBAAC,EAAD,CAAMzC,KAAK,gBAGnB,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAasC,QAjBN,KAEXI,QAAQ,yCACRL,EAAW,CACPX,UAAW,CAACO,GAAIvB,EAASuB,OAaSM,MAAO,CAACI,MAAO,UAAWF,OAAQ,YAChE,kBAAC,EAAD,CAAMxC,MAAM,OAAOC,OAAO,OAAOF,KAAK,kB,+eCrF9D,MAAMM,EAAYC,IAAH,KA4BTqC,EAAMC,YAAUC,IAAQ,MAC5B,4CAA6C,CAC3CC,aAAc,OAEd,cAAe,CACbA,aAAc,OAIdC,EAAMH,YAAUI,IAAM,MAC1B,4CAA6C,CAC3CC,WAAY,aAIVC,EAA2B,CAC/BlD,MAAO,OACPuC,YAAa,OACbG,MAAO,UACPS,gBAAiB,WAEbC,EAA2B,CAC/BpD,MAAO,OACPqD,WAAY,OACZX,MAAO,UACPS,gBAAiB,WAIJ,SAASG,IAAW,MAAD,EACJC,mBAAS,IADL,mBACzBC,EADyB,KACjBC,EADiB,OAEJF,mBAAS,GAFL,mBAEzB7B,EAFyB,KAEjBgC,EAFiB,OAGCC,YAAStD,GAAlCa,EAHwB,EAGxBA,KAAM0C,EAHkB,EAGlBA,MAAOC,EAHW,EAGXA,QACflD,EAAWC,cAEXC,EAAaE,sBACf,IAAMJ,EAAS,CAAEK,KAAM,cAAeC,gBAAiB,cACvD,CAACN,IAIL,GAAIiD,EACF,OAAO,uCAAaA,EAAME,SAgB5B,SAASC,EAAuB7C,GAE9B,QADgBA,GAAiC,IAA1BA,EAAKI,MAAMa,YAAwC,IAAXT,EASjE,SAASsC,EAAmB9C,GAE1B,OADeA,IAAQA,EAAKI,MAAMW,QAIpC,MAAMnC,EAAO,EAAGC,WACd,IAAIG,EAAaC,IAASC,eAAeL,GAAQI,IAASJ,GAAQ,OAClE,OAAO,kBAACG,EAAD,OAGT,OACI,kBAAC,IAAD,CAAM+D,OAAO,GACX,kBAAClB,EAAD,KACE,kBAACJ,EAAD,CAAKuB,GAAI,IACP,kBAAC,IAAD,CACI5B,MAAO,CACLQ,aAAc,GACdqB,UAAW,gCAGf,kBAACxB,EAAD,CAAKuB,GAAI,GACP,kBAAC,IAAD,eAGF,kBAACvB,EAAD,CAAKuB,GAAI,GACP,kBAACE,EAAA,EAAD,CACIC,MAAOb,EACPc,YAAY,qBACZC,SAnDlB,SAAsBC,GACpB,MAAMH,EAAQG,EAAMC,cAAcJ,MAClCZ,EAAUY,GACVR,EAAQ,CACNa,WAAYL,KAgDEM,WAAS,KAGf,kBAAChC,EAAD,CAAKuB,GAAI,GACP,kBAACU,EAAA,EAAD,CACIvC,QAASxB,EACTgE,cAAe,IAAM,kBAAC,IAAD,MACrBC,UAAW,CACTC,WAAY,CACVzC,MAAO,MACLtC,MAAO,OACPgF,oBAAqB,MACrBC,qBAAsB,MACtBC,uBAAwB,MACxBC,wBAAyB,WAVnC,cAoBJ,kBAAC,IAAD,CAAS7C,MAAO,CAAE6B,UAAW,iCAC3B,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAaiB,qBAAqB,6IAChC,kBAAC,IAAD,UACA,kBAAC,IAAD,aACA,kBAAC,IAAD,aACA,kBAAC,IAAD,cACA,kBAAC,IAAD,aACA,kBAAC,IAAD,mBACA,kBAAC,IAAD,eAEClE,EACGA,EAAKI,MAAMO,MAAMK,OACbhB,EAAKI,MAAMO,MAAMwD,IAAI,CAACtD,EAAWuD,IAEvB,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACnB,kBAAC,IAAD,KAAiBA,EAAM,GACvB,kBAAC,IAAD,KAAiBvD,EAAK0D,MACtB,kBAAC,IAAD,KAAiB1D,EAAK2D,MAEtB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,IAAG,UAAKC,KAAL,OAAwB7D,EAAK8D,WAG3C,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC/F,EAAD,CAAMC,KAAMgC,EAAKhC,SAIrB,kBAAC,IAAD,KACG+F,IAAM/D,EAAKgE,YAAYC,OAAO,2BAGjC,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAetF,YAAagB,EAAQjB,SAAUsB,OAM5D,kBAACkE,EAAA,EAAD,CACIC,YAAY,EACZ5D,MAAO,CACL6D,gBAAiB,IACjBC,cAAe,SAIzB,QAKV,kBAACrD,EAAD,KACE,kBAACJ,EAAD,CAAKuB,GAAI,IAET,kBAACvB,EAAD,CAAKuB,GAAI,EACJ5B,MAAO,CAAE+D,QAAS,QAASC,UAAW,QAASC,UAAW,SAE7D,kBAAC3B,EAAA,EAAD,CACItC,MAAQyB,EAAuB7C,GAAQgC,EAA2B,CAACX,YAAa,QAChFiE,SAAUzC,EAAuB7C,GACjCmB,QArIlB,WACEqB,EAAUhC,EAAO,IACjBmC,EAAQ,CACNnC,OAAQA,EAAS,OA+HP,YAMA,kBAACkD,EAAA,EAAD,CACItC,MAAQ0B,EAAmB9C,GAAQkC,EAA2B,KAC9DoD,SAAUxC,EAAmB9C,GAC7BmB,QAjIlB,WACEqB,EAAUhC,EAAO,IACjBmC,EAAQ,CACNnC,OAAQA,EAAS,OA2HP","file":"static/js/27.30e32d92.chunk.js","sourcesContent":["import React from 'react';\nimport {useDrawerDispatch} from '../../context/DrawerContext';\nimport {\n    IconWrapper,\n    ActionStyle,\n} from '../Types/Types.style';\nimport {AllIcons} from \"../../assets/icons/all-icons\";\nimport gql from 'graphql-tag';\nimport {useMutation} from \"@apollo/react-hooks\";\n\n\ntype Props = {\n    itemData: any;\n    itemsOffset: number;\n};\n\nconst Icon = ({icon, width = '18px', height = '18px'}) => {\n    let Component = AllIcons.hasOwnProperty(icon) ? AllIcons[icon] : 'span';\n    return <Component width={width} height={height}/>;\n}\n\nconst GET_TYPES = gql`\n    query GetTypes(\n        $searchText: String\n        $offset: Int\n    ) {\n        types(\n            searchText: $searchText\n            offset: $offset\n        ) {\n            items {\n                id\n                name\n                slug\n                image\n                icon\n                meta_title\n                meta_keyword\n                meta_description\n                created_at\n            }\n            totalCount\n            hasMore\n        }\n    }\n`;\n\nconst DELETE_TYPE = gql`\n    mutation DeleteType($id: ID!) {\n        deleteType(id: $id) {\n            message\n            status\n        }\n    }\n`;\n\n\nconst ActionWrapper: React.FC<Props> =\n    ({\n         itemData,\n        itemsOffset,\n         ...props\n     }) => {\n        const dispatch = useDrawerDispatch();\n        const openDrawer = React.useCallback(\n            () => {\n                dispatch({\n                    type: 'OPEN_DRAWER',\n                    drawerComponent: 'TYPE_UPDATE_FORM',\n                    data: itemData,\n                })\n            },\n            [dispatch, itemData]\n        );\n        \n        const updateItemsQuery = (cache) => {\n            const {types} = cache.readQuery({\n                query: GET_TYPES,\n                variables: {offset: itemsOffset},\n            });\n\n            cache.writeQuery({\n                query: GET_TYPES,\n                variables: {offset: itemsOffset},\n                data: {\n                    types: {\n                        __typename: types.__typename,\n                        items: types.items.filter((item) => {\n                            return item.id !== itemData.id;\n                        }),\n                        hasMore: types.items.length - 1 >= 12,\n                        totalCount: types.items.length - 1,\n                    },\n                },\n            });\n        };\n\n        const [deleteType] = useMutation(DELETE_TYPE, {\n            update: updateItemsQuery\n        });\n        const itemDelete = () => {\n            // eslint-disable-next-line no-restricted-globals\n            if (confirm('Are you sure? You can not undo this.')) {\n                deleteType({\n                    variables: {id: itemData.id},\n                });\n            }\n        }\n\n        return (\n            <div>\n                <ActionStyle>\n                    <IconWrapper onClick={openDrawer} style={{marginRight: '10px', cursor: 'pointer'}}>\n                        <Icon icon=\"ArrowNext\"/>\n                    </IconWrapper>\n                </ActionStyle>\n                <ActionStyle>\n                    <IconWrapper onClick={itemDelete} style={{color: '#c50707', cursor: 'pointer'}}>\n                        <Icon width=\"15px\" height=\"15px\" icon=\"CloseIcon\"/>\n                    </IconWrapper>\n                </ActionStyle>\n            </div>\n        );\n    };\n\nexport default ActionWrapper;\n","import React, {useCallback, useState} from 'react';\nimport dayjs from 'dayjs';\nimport { withStyle } from 'baseui';\nimport {\n  Grid,\n  Row as Rows,\n  Col as Column,\n} from '../../components/FlexBox/FlexBox';\n\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Wrapper, Header, Heading } from '../../components/WrapperStyle';\n\nimport {AllIcons} from \"../../assets/icons/all-icons\";\n\nimport {\n  TableWrapper,\n  StyledTable,\n  StyledHeadCell,\n  StyledBodyCell,\n  Image,\n  ImageWrapper,\n  IconWrapper,\n} from './Types.style';\nimport NoResult from '../../components/NoResult/NoResult';\nimport {Plus} from \"../../components/AllSvgIcon\";\nimport {useDrawerDispatch} from \"../../context/DrawerContext\";\nimport ActionWrapper from \"../TypeForm/ActionWrapper\";\nimport {ADMIN_IMAGE_HOST} from \"../../helpers/images-path\";\n\nconst GET_TYPES = gql`\n  query GetTypes(\n    $searchText: String\n    $offset: Int\n  ) {\n    types(\n      searchText: $searchText\n      offset: $offset\n    ) {\n      items {\n        id\n        name\n        slug\n        image\n        icon\n        home_title\n        home_subtitle\n        meta_title\n        meta_keyword\n        meta_description\n        created_at\n      }\n      totalCount\n      hasMore\n    }\n  }\n`;\n\nconst Col = withStyle(Column, () => ({\n  '@media only screen and (max-width: 767px)': {\n    marginBottom: '20px',\n\n    ':last-child': {\n      marginBottom: 0,\n    },\n  },\n}));\nconst Row = withStyle(Rows, () => ({\n  '@media only screen and (min-width: 768px)': {\n    alignItems: 'center',\n  },\n}));\n\nconst prevButtonDisabledStyles = {\n  width: '90px',\n  marginRight: '10px',\n  color: '#6f6f6f',\n  backgroundColor: '#d8d8d8'\n};\nconst nextButtonDisabledStyles = {\n  width: '90px',\n  marginLeft: '10px',\n  color: '#6f6f6f',\n  backgroundColor: '#d8d8d8'\n};\n\n\nexport default function Coupons() {\n  const [search, setSearch] = useState('');\n  const [offset, setOffset] = useState(0);\n  const { data, error, refetch } = useQuery(GET_TYPES);\n  const dispatch = useDrawerDispatch();\n\n  const openDrawer = useCallback(\n      () => dispatch({ type: 'OPEN_DRAWER', drawerComponent: 'TYPE_FORM' }),\n      [dispatch]\n  );\n\n\n  if (error) {\n    return <div>Error! {error.message}</div>;\n  }\n\n  function handleSearch(event) {\n    const value = event.currentTarget.value;\n    setSearch(value);\n    refetch({\n      searchText: value,\n    });\n  }\n  function handlePrevious() {\n    setOffset(offset-12);\n    refetch({\n      offset: offset - 12,\n    });\n  }\n  function handlePreviousDisabled(data) {\n    const result = (data ? data.types.totalCount === 0 : false) || offset === 0;\n    return result;\n  }\n  function handleNext() {\n    setOffset(offset+12);\n    refetch({\n      offset: offset + 12,\n    });\n  }\n  function handleNextDisabled(data) {\n    const result = data ? !data.types.hasMore : true;\n    return result;\n  }\n\n  const Icon = ({ icon }) => {\n    let Component =  AllIcons.hasOwnProperty(icon) ? AllIcons[icon] : 'span';\n    return <Component />;\n  }\n\n  return (\n      <Grid fluid={true}>\n        <Row>\n          <Col md={12}>\n            <Header\n                style={{\n                  marginBottom: 30,\n                  boxShadow: '0 0 5px rgba(0, 0 ,0, 0.05)',\n                }}\n            >\n              <Col md={2}>\n                <Heading>Types</Heading>\n              </Col>\n\n              <Col md={6}>\n                <Input\n                    value={search}\n                    placeholder=\"Ex: Search By Name\"\n                    onChange={handleSearch}\n                    clearable\n                />\n              </Col>\n              <Col md={2}>\n                <Button\n                    onClick={openDrawer}\n                    startEnhancer={() => <Plus />}\n                    overrides={{\n                      BaseButton: {\n                        style: () => ({\n                          width: '100%',\n                          borderTopLeftRadius: '3px',\n                          borderTopRightRadius: '3px',\n                          borderBottomLeftRadius: '3px',\n                          borderBottomRightRadius: '3px',\n                        }),\n                      },\n                    }}\n                >\n                  Add Type\n                </Button>\n              </Col>\n            </Header>\n\n            <Wrapper style={{ boxShadow: '0 0 5px rgba(0, 0 , 0, 0.05)' }}>\n              <TableWrapper>\n                <StyledTable $gridTemplateColumns=\"minmax(70px, 70px) minmax(150px, auto) minmax(150px, auto) minmax(70px, 70px) minmax(70px, 70px) minmax(120px, auto) minmax(160px, 160px)\">\n                  <StyledHeadCell>#</StyledHeadCell>\n                  <StyledHeadCell>Name</StyledHeadCell>\n                  <StyledHeadCell>Slug</StyledHeadCell>\n                  <StyledHeadCell>Image</StyledHeadCell>\n                  <StyledHeadCell>Icon</StyledHeadCell>\n                  <StyledHeadCell>Created At</StyledHeadCell>\n                  <StyledHeadCell>Action</StyledHeadCell>\n\n                  {data ? (\n                      data.types.items.length ? (\n                          data.types.items.map((item: any, index: number) => {\n                                return (\n                                    <React.Fragment key={index}>\n                                      <StyledBodyCell>{index+1}</StyledBodyCell>\n                                      <StyledBodyCell>{item.name}</StyledBodyCell>\n                                      <StyledBodyCell>{item.slug}</StyledBodyCell>\n\n                                      <StyledBodyCell>\n                                        <ImageWrapper>\n                                          <Image src={`${ADMIN_IMAGE_HOST}${item.image}`} />\n                                        </ImageWrapper>\n                                      </StyledBodyCell>\n                                      <StyledBodyCell>\n                                        <IconWrapper>\n                                          <Icon icon={item.icon} />\n                                        </IconWrapper>\n                                      </StyledBodyCell>\n\n                                      <StyledBodyCell>\n                                        {dayjs(item.created_at).format('DD MMM YYYY hh:mm:ss A')}\n                                      </StyledBodyCell>\n\n                                      <StyledBodyCell>\n                                        <ActionWrapper itemsOffset={offset} itemData={item}/>\n                                      </StyledBodyCell>\n                                    </React.Fragment>\n                                );\n                              })\n                      ) : (\n                          <NoResult\n                              hideButton={false}\n                              style={{\n                                gridColumnStart: '1',\n                                gridColumnEnd: 'one',\n                              }}\n                          />\n                      )\n                  ) : null}\n                </StyledTable>\n              </TableWrapper>\n            </Wrapper>\n\n            <Row>\n              <Col md={8}>\n              </Col>\n              <Col md={4}\n                   style={{ display: 'block', textAlign: 'right', marginTop: '20px' }}\n              >\n                <Button\n                    style={ handlePreviousDisabled(data) ? prevButtonDisabledStyles : {marginRight: '10px'}}\n                    disabled={handlePreviousDisabled(data)}\n                    onClick={handlePrevious}>\n                  Previous\n                </Button>\n                <Button\n                    style={ handleNextDisabled(data) ? nextButtonDisabledStyles : null}\n                    disabled={handleNextDisabled(data)}\n                    onClick={handleNext}>\n                  Next\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Grid>\n  );\n}\n"],"sourceRoot":""}
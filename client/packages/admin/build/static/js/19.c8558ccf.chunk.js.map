{"version":3,"sources":["components/Select/Select.tsx","assets/icons/CaretDownIcon.tsx","components/WrapperStyle.tsx","components/NoResult/NoResult.style.tsx","components/NoResult/NoResult.tsx","components/NoResult/no-result.svg","components/CheckBox/CheckBox.tsx","containers/Orders/Orders.style.tsx","containers/Orders/Orders.tsx","components/Button/Button.tsx","components/Button/Button.style.tsx","components/FlexBox/FlexBox.ts","components/Input/Input.tsx"],"names":["getContainerFontStyle","$theme","typography","fontBold14","props","overrides","SelectArrow","Popover","Body","style","zIndex","Placeholder","color","colors","textDark","SingleValue","lineHeight","DropdownListItem","fontSize","fontWeight","OptionContent","$selected","textNormal","DropdownOption","CaretDownIcon","width","height","xmlns","viewBox","data-name","d","transform","fill","Wrapper","styled","backgroundColor","Header","display","justifyContent","alignItems","flex","flexDirection","flexWrap","padding","Heading","fontBold18","margin","paddingTop","NoResultWrapper","h3","p","ImageWrapper","marginTop","maxWidth","img","ButtonWrapper","cursor","borderRadius","fontFamily","textDecoration","textTransform","border","transition","NoResult","id","onClick","hideButton","src","NoResultSvg","alt","module","exports","LABEL_PLACEMENT","Object","freeze","top","right","bottom","left","Checkbox","TableWrapper","StyledTable","withStyle","BaseStyledTable","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","alignContent","StyledHeadCell","BaseStyledHeadCell","boxShadow","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","alignSelf","StyledCell","BaseStyledCell","GET_ORDERS","gql","themedUseStyletron","createThemedUseStyletron","Status","content","borders","borderE6","marginRight","Col","Column","marginBottom","Row","Rows","statusSelectOptions","value","label","limitSelectOptions","Orders","useState","checkedId","setCheckedId","checked","setChecked","useCss","theme","sent","primary","failed","red400","processing","paid","blue400","status","setStatus","limit","setLimit","search","setSearch","useQuery","data","error","refetch","message","handleCheckbox","event","name","currentTarget","includes","prevState","filter","fluid","md","xs","Select","options","labelKey","valueKey","placeholder","searchable","onChange","length","Input","searchText","clearable","$gridTemplateColumns","type","target","idx","orders","map","order","Checkmark","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","item","values","row","index","Fragment","key","dayjs","format","className","toLowerCase","gridColumnStart","gridColumnEnd","Button","children","BaseButton","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","buttonBorderRadius","SHAPE","pill","round","getBorderRadiiStyles","Grid","Grids","Cols","getInputFontStyle"],"mappings":"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","file":"static/js/19.c8558ccf.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from '../../assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import React from 'react';\nexport const CaretDownIcon = ({\n  color = 'currentColor',\n  width = '18px',\n  height = '18px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 10 5'\n    >\n      <path\n        data-name='_ionicons_svg_md-arrow-dropdown (2)'\n        d='M128,192l5,5,5-5Z'\n        transform='translate(-128 -192)'\n        fill={color}\n      />\n    </svg>\n  );\n};\n","import { styled } from 'baseui';\n\nexport const Wrapper = styled('div', () => ({\n  backgroundColor: '#ffffff',\n}));\n\nexport const Header = styled('header', () => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flex: '0 1 auto',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  padding: '40px',\n  /* margin-bottom: 40px, */\n  backgroundColor: '#ffffff',\n\n  '@media only screen and (max-width: 990px)': {\n    padding: '20px',\n  },\n}));\n\nexport const Heading = styled('h2', ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  color: $theme.colors.textDark,\n  margin: 0,\n}));\n\nexport const ButtonWrapper = styled('div', ({ $theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  paddingTop: '20px',\n}));\n","import { styled } from 'baseui';\n\nexport const NoResultWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '50px 20px',\n\n  h3: {\n    fontSize: '24px',\n    fontWeight: 700,\n    color: '#161f6a',\n    margin: '0 0 15px',\n  },\n\n  p: {\n    fontSize: '16px',\n    fontWeight: 400,\n    color: '#707070',\n    margin: 0,\n  },\n}));\n\nexport const ImageWrapper = styled('div', () => ({\n  marginTop: '50px',\n  width: '100%',\n  maxWidth: '600px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  img: {\n    maxWidth: '100%',\n  },\n}));\n\nexport const ButtonWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '70px',\n}));\n\nexport const Button = styled('button', () => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#ffffff',\n  backgroundColor: '#009e7f',\n  height: '50px',\n  borderRadius: '3px',\n  fontFamily: `'Lato', sans-serif`,\n  fontSize: '16px',\n  fontWeight: 700,\n  textDecoration: 'none',\n  textTransform: 'capitalize',\n  padding: '0 30px',\n  border: 0,\n  transition: 'all 0.3s ease',\n}));\n","import React from \"react\";\nimport NoResultSvg from \"./no-result.svg\";\nimport { NoResultWrapper, ImageWrapper, ButtonWrapper } from \"./NoResult.style\";\nimport Button from \"../Button/Button\";\n// import { ArrowPrev } from '../AllSvgIcon';\n\ntype NoResultProps = {\n  id?: string;\n  onClick?: () => void;\n  hideButton?: boolean;\n  style?: any;\n};\n\nconst NoResult: React.FC<NoResultProps> = ({\n  id,\n  onClick,\n  hideButton = true,\n  style\n}) => {\n  return (\n    <NoResultWrapper id={id} style={style}>\n      <h3>Sorry, No result found :(</h3>\n\n      <ImageWrapper>\n        <img src={NoResultSvg} alt=\"No Result\" />\n      </ImageWrapper>\n\n      {hideButton ? (\n        <ButtonWrapper>\n          <div onClick={onClick}>\n            <Button>\n              Try Again Later\n              {/* <ArrowPrev /> Go Back */}\n            </Button>\n          </div>\n        </ButtonWrapper>\n      ) : null}\n    </NoResultWrapper>\n  );\n};\n\nexport default NoResult;\n","module.exports = __webpack_public_path__ + \"static/media/no-result.e1457eaf.svg\";","import React from 'react';\nimport { Checkbox as BaseCheckbox } from 'baseui/checkbox';\nexport { STYLE_TYPE } from 'baseui/checkbox';\n\nexport const LABEL_PLACEMENT = Object.freeze({\n  top: 'top',\n  right: 'right',\n  bottom: 'bottom',\n  left: 'left',\n});\n\nconst Checkbox = ({ ...props }) => {\n  return <BaseCheckbox {...props} />;\n};\n\nexport default Checkbox;\n","import { styled, withStyle } from 'baseui';\nimport {\n  StyledTable as BaseStyledTable,\n  StyledHeadCell as BaseStyledHeadCell,\n  StyledBodyCell as BaseStyledCell,\n} from 'baseui/table-grid';\n\nexport const TableWrapper = styled('div', () => ({\n  width: '100%',\n  height: '450px',\n}));\n\nexport const StyledTable = withStyle(BaseStyledTable, () => ({\n  borderTopLeftRadius: '0 !important',\n  borderTopRightRadius: '0 !important',\n  borderBottomLeftRadius: '0 !important',\n  borderBottomRightRadius: '0 !important',\n  alignContent: 'start',\n}));\n\nexport const StyledHeadCell = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n}));\n\nexport const StyledCell = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n}));\n\nexport const StyledHeadCellCenter = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n  justifyContent: 'center',\n}));\n\nexport const StyledCellCenter = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n  justifyContent: 'center',\n}));\n","import React, { useState } from 'react';\nimport { styled, withStyle, createThemedUseStyletron } from 'baseui';\nimport dayjs from 'dayjs';\nimport {\n  Grid,\n  Row as Rows,\n  Col as Column,\n} from '../../components/FlexBox/FlexBox';\nimport Select from '../../components/Select/Select';\nimport Input from '../../components/Input/Input';\n\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Wrapper, Header, Heading } from '../../components/WrapperStyle';\nimport Checkbox from '../../components/CheckBox/CheckBox';\n\nimport {\n  TableWrapper,\n  StyledTable,\n  StyledHeadCell,\n  StyledCell,\n} from './Orders.style';\nimport NoResult from '../../components/NoResult/NoResult';\n\nconst GET_ORDERS = gql`\n  query getOrders($status: String, $limit: Int, $searchText: String) {\n    orders(status: $status, limit: $limit, searchText: $searchText) {\n      id\n      customer_id\n      creation_date\n      delivery_address\n      amount\n      payment_method\n      contact_number\n      status\n    }\n  }\n`;\n\ntype CustomThemeT = { red400: string; textNormal: string; colors: any };\nconst themedUseStyletron = createThemedUseStyletron<CustomThemeT>();\n\nconst Status = styled('div', ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  color: $theme.colors.textDark,\n  display: 'flex',\n  alignItems: 'center',\n  lineHeight: '1',\n  textTransform: 'capitalize',\n\n  ':before': {\n    content: '\"\"',\n    width: '10px',\n    height: '10px',\n    display: 'inline-block',\n    borderTopLeftRadius: '10px',\n    borderTopRightRadius: '10px',\n    borderBottomRightRadius: '10px',\n    borderBottomLeftRadius: '10px',\n    backgroundColor: $theme.borders.borderE6,\n    marginRight: '10px',\n  },\n}));\n\nconst Col = withStyle(Column, () => ({\n  '@media only screen and (max-width: 767px)': {\n    marginBottom: '20px',\n\n    ':last-child': {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst Row = withStyle(Rows, () => ({\n  '@media only screen and (min-width: 768px)': {\n    alignItems: 'center',\n  },\n}));\n\nconst statusSelectOptions = [\n  { value: 'delivered', label: 'Delivered' },\n  { value: 'pending', label: 'Pending' },\n  { value: 'processing', label: 'Processing' },\n  { value: 'failed', label: 'Failed' },\n];\nconst limitSelectOptions = [\n  { value: 7, label: 'Last 7 orders' },\n  { value: 15, label: 'Last 15 orders' },\n  { value: 30, label: 'Last 30 orders' },\n];\n\nexport default function Orders() {\n  const [checkedId, setCheckedId] = useState([]);\n  const [checked, setChecked] = useState(false);\n\n  const [useCss, theme] = themedUseStyletron();\n  const sent = useCss({\n    ':before': {\n      content: '\"\"',\n      backgroundColor: theme.colors.primary,\n    },\n  });\n  const failed = useCss({\n    ':before': {\n      content: '\"\"',\n      backgroundColor: theme.colors.red400,\n    },\n  });\n  const processing = useCss({\n    ':before': {\n      content: '\"\"',\n      backgroundColor: theme.colors.textNormal,\n    },\n  });\n  const paid = useCss({\n    ':before': {\n      content: '\"\"',\n      backgroundColor: theme.colors.blue400,\n    },\n  });\n\n  const [status, setStatus] = useState([]);\n  const [limit, setLimit] = useState([]);\n  const [search, setSearch] = useState([]);\n\n  const { data, error, refetch } = useQuery(GET_ORDERS);\n  if (error) {\n    return <div>Error! {error.message}</div>;\n  }\n\n  function handleStatus({ value }) {\n    setStatus(value);\n    if (value.length) {\n      refetch({\n        status: value[0].value,\n        limit: limit.length ? limit[0].value : null,\n      });\n    } else {\n      refetch({ status: null });\n    }\n  }\n\n  function handleLimit({ value }) {\n    setLimit(value);\n    if (value.length) {\n      refetch({\n        status: status.length ? status[0].value : null,\n        limit: value[0].value,\n      });\n    } else {\n      refetch({\n        limit: null,\n      });\n    }\n  }\n  function handleSearch(event) {\n    const { value } = event.currentTarget;\n    setSearch(value);\n    refetch({ searchText: value });\n  }\n  function onAllCheck(event) {\n    if (event.target.checked) {\n      const idx = data && data.orders.map((order) => order.id);\n      setCheckedId(idx);\n    } else {\n      setCheckedId([]);\n    }\n    setChecked(event.target.checked);\n  }\n\n  function handleCheckbox(event) {\n    const { name } = event.currentTarget;\n    if (!checkedId.includes(name)) {\n      setCheckedId((prevState) => [...prevState, name]);\n    } else {\n      setCheckedId((prevState) => prevState.filter((id) => id !== name));\n    }\n  }\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col md={12}>\n          <Header\n            style={{\n              marginBottom: 30,\n              boxShadow: '0 0 8px rgba(0, 0 ,0, 0.1)',\n            }}\n          >\n            <Col md={3} xs={12}>\n              <Heading>Orders</Heading>\n            </Col>\n\n            <Col md={9} xs={12}>\n              <Row>\n                <Col md={3} xs={12}>\n                  <Select\n                    options={statusSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    placeholder=\"Status\"\n                    value={status}\n                    searchable={false}\n                    onChange={handleStatus}\n                  />\n                </Col>\n\n                <Col md={3} xs={12}>\n                  <Select\n                    options={limitSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    value={limit}\n                    placeholder=\"Order Limits\"\n                    searchable={false}\n                    onChange={handleLimit}\n                  />\n                </Col>\n\n                <Col md={6} xs={12}>\n                  <Input\n                    value={search}\n                    placeholder=\"Ex: Search By Address\"\n                    onChange={handleSearch}\n                    clearable\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Header>\n\n          <Wrapper style={{ boxShadow: '0 0 5px rgba(0, 0 , 0, 0.05)' }}>\n            <TableWrapper>\n              <StyledTable $gridTemplateColumns=\"minmax(70px, 70px) minmax(70px, 70px) minmax(150px, auto) minmax(150px, auto) minmax(200px, max-content) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto)\">\n                <StyledHeadCell>\n                  <Checkbox\n                    type=\"checkbox\"\n                    value=\"checkAll\"\n                    checked={checked}\n                    onChange={onAllCheck}\n                    overrides={{\n                      Checkmark: {\n                        style: {\n                          borderTopWidth: '2px',\n                          borderRightWidth: '2px',\n                          borderBottomWidth: '2px',\n                          borderLeftWidth: '2px',\n                          borderTopLeftRadius: '4px',\n                          borderTopRightRadius: '4px',\n                          borderBottomRightRadius: '4px',\n                          borderBottomLeftRadius: '4px',\n                        },\n                      },\n                    }}\n                  />\n                </StyledHeadCell>\n                <StyledHeadCell>ID</StyledHeadCell>\n                <StyledHeadCell>Customer ID</StyledHeadCell>\n                <StyledHeadCell>Time</StyledHeadCell>\n                <StyledHeadCell>Delivery Address</StyledHeadCell>\n                <StyledHeadCell>Amount</StyledHeadCell>\n                <StyledHeadCell>Payment Method</StyledHeadCell>\n                <StyledHeadCell>Contact</StyledHeadCell>\n                <StyledHeadCell>Status</StyledHeadCell>\n\n                {data ? (\n                  data.orders.length ? (\n                    data.orders\n                      .map((item) => Object.values(item))\n                      .map((row, index) => (\n                        <React.Fragment key={index}>\n                          <StyledCell>\n                            <Checkbox\n                              name={row[0]}\n                              checked={checkedId.includes(row[0])}\n                              onChange={handleCheckbox}\n                              overrides={{\n                                Checkmark: {\n                                  style: {\n                                    borderTopWidth: '2px',\n                                    borderRightWidth: '2px',\n                                    borderBottomWidth: '2px',\n                                    borderLeftWidth: '2px',\n                                    borderTopLeftRadius: '4px',\n                                    borderTopRightRadius: '4px',\n                                    borderBottomRightRadius: '4px',\n                                    borderBottomLeftRadius: '4px',\n                                  },\n                                },\n                              }}\n                            />\n                          </StyledCell>\n                          <StyledCell>{row[0]}</StyledCell>\n                          <StyledCell>{row[1]}</StyledCell>\n                          <StyledCell>\n                            {dayjs(row[2]).format('DD MMM YYYY')}\n                          </StyledCell>\n                          <StyledCell>{row[3]}</StyledCell>\n                          <StyledCell>${row[4]}</StyledCell>\n                          <StyledCell>{row[5]}</StyledCell>\n                          <StyledCell>{row[6]}</StyledCell>\n                          <StyledCell style={{ justifyContent: 'center' }}>\n                            <Status\n                              className={\n                                row[7].toLowerCase() === 'delivered'\n                                  ? sent\n                                  : row[7].toLowerCase() === 'pending'\n                                  ? paid\n                                  : row[7].toLowerCase() === 'processing'\n                                  ? processing\n                                  : row[7].toLowerCase() === 'failed'\n                                  ? failed\n                                  : ''\n                              }\n                            >\n                              {row[7]}\n                            </Status>\n                          </StyledCell>\n                        </React.Fragment>\n                      ))\n                  ) : (\n                    <NoResult\n                      hideButton={false}\n                      style={{\n                        gridColumnStart: '1',\n                        gridColumnEnd: 'one',\n                      }}\n                    />\n                  )\n                ) : null}\n              </StyledTable>\n            </TableWrapper>\n          </Wrapper>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n","import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n"],"sourceRoot":""}
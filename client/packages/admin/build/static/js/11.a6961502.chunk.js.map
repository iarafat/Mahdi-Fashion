{"version":3,"sources":["components/WrapperStyle.tsx","components/NoResult/no-result.svg","components/NoResult/NoResult.style.tsx","components/NoResult/NoResult.tsx","components/CheckBox/CheckBox.tsx","components/ProgressBar/ProgressBar.tsx","assets/icons/PlusMinus.tsx","containers/Coupons/Coupon.style.tsx","containers/Coupons/Coupons.tsx","components/Button/Button.tsx","components/Button/Button.style.tsx","components/FlexBox/FlexBox.ts","components/Input/Input.tsx","assets/icons/CaretDownIcon.tsx","components/Select/Select.tsx","context/create-context.tsx","context/DrawerContext.tsx"],"names":["Wrapper","styled","backgroundColor","Header","display","justifyContent","alignItems","flex","flexDirection","flexWrap","padding","Heading","$theme","typography","fontBold18","color","colors","textDark","margin","paddingTop","module","exports","NoResultWrapper","width","h3","fontSize","fontWeight","p","ImageWrapper","marginTop","maxWidth","img","ButtonWrapper","cursor","height","borderRadius","fontFamily","textDecoration","textTransform","border","transition","NoResult","id","onClick","hideButton","style","src","NoResultSvg","alt","Object","freeze","top","right","bottom","left","Checkbox","props","ProgressBar","Plus","xmlns","viewBox","data-name","transform","rx","fill","Status","fontBold14","lineHeight","content","borders","borderE6","marginRight","TableWrapper","StyledTable","withStyle","BaseStyledTable","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","alignContent","StyledHeadCell","BaseStyledHeadCell","boxShadow","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","alignSelf","zIndex","StyledBodyCell","BaseStyledCell","ProgressWrapper","ProgressText","font13","primaryFontFamily","GET_COUPONS","gql","themedUseStyletron","createThemedUseStyletron","Col","Column","marginBottom","Row","Rows","statusSelectOptions","value","label","Coupons","dispatch","useDrawerDispatch","useState","checkedId","setCheckedId","checked","setChecked","openDrawer","useCallback","type","drawerComponent","status","setStatus","search","setSearch","useCss","theme","active","primary","revoked","red400","useQuery","data","error","refetch","message","handleCheckbox","event","name","currentTarget","includes","prevState","filter","fluid","md","Select","options","labelKey","valueKey","placeholder","searchable","onChange","length","searchBy","Input","clearable","Button","startEnhancer","overrides","BaseButton","$size","$shape","$gridTemplateColumns","target","idx","coupons","map","coupon","Checkmark","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","item","values","row","index","Fragment","key","num","total","successValue","Bar","marginLeft","position","BarProgress","dayjs","format","className","gridColumnStart","gridColumnEnd","children","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","buttonBorderRadius","SHAPE","pill","round","getBorderRadiiStyles","Grid","Grids","Cols","getInputFontStyle","CaretDownIcon","d","getContainerFontStyle","SelectArrow","Popover","Body","Placeholder","SingleValue","DropdownListItem","OptionContent","$selected","textNormal","DropdownOption","defaultValue","reducer","stateCtx","createContext","dispatchCtx","property","useContext","React","useReducer","state","Provider","useCreateContext","isOpen","action","useDrawerState","DrawerProvider"],"mappings":"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","file":"static/js/11.a6961502.chunk.js","sourcesContent":["import { styled } from 'baseui';\n\nexport const Wrapper = styled('div', () => ({\n  backgroundColor: '#ffffff',\n}));\n\nexport const Header = styled('header', () => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flex: '0 1 auto',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  padding: '40px',\n  /* margin-bottom: 40px, */\n  backgroundColor: '#ffffff',\n\n  '@media only screen and (max-width: 990px)': {\n    padding: '20px',\n  },\n}));\n\nexport const Heading = styled('h2', ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  color: $theme.colors.textDark,\n  margin: 0,\n}));\n\nexport const ButtonWrapper = styled('div', ({ $theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  paddingTop: '20px',\n}));\n","module.exports = __webpack_public_path__ + \"static/media/no-result.e1457eaf.svg\";","import { styled } from 'baseui';\n\nexport const NoResultWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '50px 20px',\n\n  h3: {\n    fontSize: '24px',\n    fontWeight: 700,\n    color: '#161f6a',\n    margin: '0 0 15px',\n  },\n\n  p: {\n    fontSize: '16px',\n    fontWeight: 400,\n    color: '#707070',\n    margin: 0,\n  },\n}));\n\nexport const ImageWrapper = styled('div', () => ({\n  marginTop: '50px',\n  width: '100%',\n  maxWidth: '600px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  img: {\n    maxWidth: '100%',\n  },\n}));\n\nexport const ButtonWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '70px',\n}));\n\nexport const Button = styled('button', () => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#ffffff',\n  backgroundColor: '#009e7f',\n  height: '50px',\n  borderRadius: '3px',\n  fontFamily: `'Lato', sans-serif`,\n  fontSize: '16px',\n  fontWeight: 700,\n  textDecoration: 'none',\n  textTransform: 'capitalize',\n  padding: '0 30px',\n  border: 0,\n  transition: 'all 0.3s ease',\n}));\n","import React from \"react\";\nimport NoResultSvg from \"./no-result.svg\";\nimport { NoResultWrapper, ImageWrapper, ButtonWrapper } from \"./NoResult.style\";\nimport Button from \"../Button/Button\";\n// import { ArrowPrev } from '../AllSvgIcon';\n\ntype NoResultProps = {\n  id?: string;\n  onClick?: () => void;\n  hideButton?: boolean;\n  style?: any;\n};\n\nconst NoResult: React.FC<NoResultProps> = ({\n  id,\n  onClick,\n  hideButton = true,\n  style\n}) => {\n  return (\n    <NoResultWrapper id={id} style={style}>\n      <h3>Sorry, No result found :(</h3>\n\n      <ImageWrapper>\n        <img src={NoResultSvg} alt=\"No Result\" />\n      </ImageWrapper>\n\n      {hideButton ? (\n        <ButtonWrapper>\n          <div onClick={onClick}>\n            <Button>\n              Try Again Later\n              {/* <ArrowPrev /> Go Back */}\n            </Button>\n          </div>\n        </ButtonWrapper>\n      ) : null}\n    </NoResultWrapper>\n  );\n};\n\nexport default NoResult;\n","import React from 'react';\nimport { Checkbox as BaseCheckbox } from 'baseui/checkbox';\nexport { STYLE_TYPE } from 'baseui/checkbox';\n\nexport const LABEL_PLACEMENT = Object.freeze({\n  top: 'top',\n  right: 'right',\n  bottom: 'bottom',\n  left: 'left',\n});\n\nconst Checkbox = ({ ...props }) => {\n  return <BaseCheckbox {...props} />;\n};\n\nexport default Checkbox;\n","import * as React from 'react';\nimport { ProgressBar as BWProgressBar } from 'baseui/progress-bar';\n\nconst ProgressBar = ({ ...props }) => {\n  return <BWProgressBar {...props} />;\n};\n\nexport default ProgressBar;\n","import React from 'react';\n// SVG plus icon\nexport const Plus = ({\n  color = 'currentColor',\n  width = '12px',\n  height = '12px',\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 12 12\"\n    >\n      <g\n        id=\"Group_3351\"\n        data-name=\"Group 3351\"\n        transform=\"translate(-1367 -190)\"\n      >\n        <rect\n          data-name=\"Rectangle 520\"\n          width=\"12\"\n          height=\"2\"\n          rx=\"1\"\n          transform=\"translate(1367 195)\"\n          fill={color}\n        />\n        <rect\n          data-name=\"Rectangle 521\"\n          width=\"12\"\n          height=\"2\"\n          rx=\"1\"\n          transform=\"translate(1374 190) rotate(90)\"\n          fill={color}\n        />\n      </g>\n    </svg>\n  );\n};\n\n// SVG minus icon\nexport const Minus = ({\n  color = 'currentColor',\n  width = '12px',\n  height = '2px',\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 12 2\"\n    >\n      <rect\n        data-name=\"Rectangle 522\"\n        width=\"12\"\n        height=\"2\"\n        rx=\"1\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n","import { styled, withStyle } from 'baseui';\nimport {\n  StyledTable as BaseStyledTable,\n  StyledHeadCell as BaseStyledHeadCell,\n  StyledBodyCell as BaseStyledCell,\n} from 'baseui/table-grid';\n\nexport const Status = styled('div', ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  color: $theme.colors.textDark,\n  display: 'flex',\n  alignItems: 'center',\n  lineHeight: '1',\n  textTransform: 'capitalize',\n\n  ':before': {\n    content: '\"\"',\n    width: '10px',\n    height: '10px',\n    display: 'inline-block',\n    borderRadius: '10px',\n    backgroundColor: $theme.borders.borderE6,\n    marginRight: '10px',\n  },\n}));\n\nexport const TableWrapper = styled('div', () => ({\n  width: '100%',\n  height: '450px',\n}));\n\nexport const StyledTable = withStyle(BaseStyledTable, () => ({\n  borderTopLeftRadius: '0 !important',\n  borderTopRightRadius: '0 !important',\n  borderBottomLeftRadius: '0 !important',\n  borderBottomRightRadius: '0 !important',\n  alignContent: 'start',\n}));\n\nexport const StyledHeadCell = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n  zIndex: 1,\n}));\n\nexport const StyledBodyCell = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n}));\n\nexport const ProgressWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const ProgressText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n}));\n","import React, { useCallback, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { withStyle, createThemedUseStyletron } from 'baseui';\nimport {\n  Grid,\n  Row as Rows,\n  Col as Column,\n} from '../../components/FlexBox/FlexBox';\nimport { useDrawerDispatch } from '../../context/DrawerContext';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\n\nimport Select from '../../components/Select/Select';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\n\nimport { Plus } from '../../assets/icons/PlusMinus';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Wrapper, Header, Heading } from '../../components/WrapperStyle';\nimport Checkbox from '../../components/CheckBox/CheckBox';\n\nimport {\n  TableWrapper,\n  StyledTable,\n  StyledHeadCell,\n  StyledBodyCell,\n  ProgressWrapper,\n  ProgressText,\n  Status,\n} from './Coupon.style';\nimport NoResult from '../../components/NoResult/NoResult';\n\nconst GET_COUPONS = gql`\n  query getCoupons($status: String, $searchBy: String) {\n    coupons(status: $status, searchBy: $searchBy) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }\n`;\n\ntype CustomThemeT = { red400: string; textNormal: string; colors: any };\nconst themedUseStyletron = createThemedUseStyletron<CustomThemeT>();\n\nconst Col = withStyle(Column, () => ({\n  '@media only screen and (max-width: 767px)': {\n    marginBottom: '20px',\n\n    ':last-child': {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst Row = withStyle(Rows, () => ({\n  '@media only screen and (min-width: 768px)': {\n    alignItems: 'center',\n  },\n}));\n\nconst statusSelectOptions = [\n  { value: 'active', label: 'Active' },\n  { value: 'revoked', label: 'Revoked' },\n];\n\nexport default function Coupons() {\n  const dispatch = useDrawerDispatch();\n  const [checkedId, setCheckedId] = useState([]);\n  const [checked, setChecked] = useState(false);\n\n  const openDrawer = useCallback(\n    () => dispatch({ type: 'OPEN_DRAWER', drawerComponent: 'CAMPAING_FORM' }),\n    [dispatch]\n  );\n  const [status, setStatus] = useState([]);\n  const [search, setSearch] = useState('');\n  const [useCss, theme] = themedUseStyletron();\n  const active = useCss({\n    ':before': {\n      content: '\"\"',\n      backgroundColor: theme.colors.primary,\n    },\n  });\n  const revoked = useCss({\n    ':before': {\n      content: '\"\"',\n      backgroundColor: theme.colors.red400,\n    },\n  });\n\n  const { data, error, refetch } = useQuery(GET_COUPONS);\n  if (error) {\n    return <div>Error! {error.message}</div>;\n  }\n  function handleSelect({ value }) {\n    setStatus(value);\n    if (value.length) {\n      refetch({ status: value[0].value, searchBy: search });\n    } else {\n      refetch({ status: null });\n    }\n  }\n\n  function handleSearch(event) {\n    const value = event.currentTarget.value;\n\n    setSearch(value);\n    refetch({\n      status: status.length ? status[0].value : null,\n      searchBy: value,\n    });\n  }\n  function onAllCheck(event) {\n    if (event.target.checked) {\n      const idx = data && data.coupons.map((coupon) => coupon.id);\n      setCheckedId(idx);\n    } else {\n      setCheckedId([]);\n    }\n    setChecked(event.target.checked);\n  }\n\n  function handleCheckbox(event) {\n    const { name } = event.currentTarget;\n    if (!checkedId.includes(name)) {\n      setCheckedId((prevState) => [...prevState, name]);\n    } else {\n      setCheckedId((prevState) => prevState.filter((id) => id !== name));\n    }\n  }\n\n  const numberToPercent = (num, total) => {\n    return (num * 100) / total;\n  };\n\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col md={12}>\n          <Header\n            style={{\n              marginBottom: 30,\n              boxShadow: '0 0 5px rgba(0, 0 ,0, 0.05)',\n            }}\n          >\n            <Col md={2}>\n              <Heading>Campaigns</Heading>\n            </Col>\n\n            <Col md={10}>\n              <Row>\n                <Col md={3}>\n                  <Select\n                    options={statusSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    placeholder=\"Status\"\n                    value={status}\n                    searchable={false}\n                    onChange={handleSelect}\n                  />\n                </Col>\n\n                <Col md={5}>\n                  <Input\n                    value={search}\n                    placeholder=\"Ex: Search By Name\"\n                    onChange={handleSearch}\n                    clearable\n                  />\n                </Col>\n\n                <Col md={4}>\n                  <Button\n                    onClick={openDrawer}\n                    startEnhancer={() => <Plus />}\n                    overrides={{\n                      BaseButton: {\n                        style: ({ $theme, $size, $shape }) => {\n                          return {\n                            width: '100%',\n                            borderTopLeftRadius: '3px',\n                            borderTopRightRadius: '3px',\n                            borderBottomLeftRadius: '3px',\n                            borderBottomRightRadius: '3px',\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    Create Campaign\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Header>\n\n          <Wrapper style={{ boxShadow: '0 0 5px rgba(0, 0 , 0, 0.05)' }}>\n            <TableWrapper>\n              <StyledTable $gridTemplateColumns=\"minmax(70px, 70px) minmax(70px, 70px) minmax(200px, auto) minmax(200px, auto) minmax(200px, max-content) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto)\">\n                <StyledHeadCell>\n                  <Checkbox\n                    type=\"checkbox\"\n                    value=\"checkAll\"\n                    checked={checked}\n                    onChange={onAllCheck}\n                    overrides={{\n                      Checkmark: {\n                        style: {\n                          borderTopWidth: '2px',\n                          borderRightWidth: '2px',\n                          borderBottomWidth: '2px',\n                          borderLeftWidth: '2px',\n                          borderTopLeftRadius: '4px',\n                          borderTopRightRadius: '4px',\n                          borderBottomRightRadius: '4px',\n                          borderBottomLeftRadius: '4px',\n                        },\n                      },\n                    }}\n                  />\n                </StyledHeadCell>\n                <StyledHeadCell>ID</StyledHeadCell>\n                <StyledHeadCell>Campaigns Name</StyledHeadCell>\n                <StyledHeadCell>Code</StyledHeadCell>\n                <StyledHeadCell>Remaining coupon</StyledHeadCell>\n                <StyledHeadCell>Expiration Date</StyledHeadCell>\n                <StyledHeadCell>Creation Date</StyledHeadCell>\n                <StyledHeadCell>Status</StyledHeadCell>\n\n                {data ? (\n                  data.coupons.length ? (\n                    data.coupons\n                      .map((item) => Object.values(item))\n                      .map((row, index) => {\n                        return (\n                          <React.Fragment key={index}>\n                            <StyledBodyCell>\n                              <Checkbox\n                                name={row[0]}\n                                checked={checkedId.includes(row[0])}\n                                onChange={handleCheckbox}\n                                overrides={{\n                                  Checkmark: {\n                                    style: {\n                                      borderTopWidth: '2px',\n                                      borderRightWidth: '2px',\n                                      borderBottomWidth: '2px',\n                                      borderLeftWidth: '2px',\n                                      borderTopLeftRadius: '4px',\n                                      borderTopRightRadius: '4px',\n                                      borderBottomRightRadius: '4px',\n                                      borderBottomLeftRadius: '4px',\n                                    },\n                                  },\n                                }}\n                              />\n                            </StyledBodyCell>\n                            <StyledBodyCell>{row[0]}</StyledBodyCell>\n                            <StyledBodyCell>{row[1]}</StyledBodyCell>\n                            <StyledBodyCell>{row[2]}</StyledBodyCell>\n                            <StyledBodyCell>\n                              <ProgressWrapper>\n                                <ProgressBar\n                                  value={numberToPercent(row[3], row[4])}\n                                  successValue={100}\n                                  overrides={{\n                                    Bar: {\n                                      style: () => {\n                                        return {\n                                          backgroundColor: '#F2F2F2',\n                                          marginLeft: '0px',\n                                          marginRight: '0px',\n                                          height: '4px',\n                                          borderTopLeftRadius: '5px',\n                                          borderTopRightRadius: '5px',\n                                          borderBottomLeftRadius: '5px',\n                                          borderBottomRightRadius: '5px',\n                                          position: 'relative',\n                                        };\n                                      },\n                                    },\n                                    BarProgress: {\n                                      style: ({ $theme }) => {\n                                        return {\n                                          backgroundColor:\n                                            $theme.colors.primary,\n                                          borderTopLeftRadius: '5px',\n                                          borderTopRightRadius: '5px',\n                                          borderBottomLeftRadius: '5px',\n                                          borderBottomRightRadius: '5px',\n                                        };\n                                      },\n                                    },\n                                  }}\n                                />\n\n                                <ProgressText>{`${row[3] ? row[3] : 0} of ${\n                                  row[4]\n                                } codes remaining`}</ProgressText>\n                              </ProgressWrapper>\n                            </StyledBodyCell>\n                            <StyledBodyCell>\n                              {dayjs(row[5]).format('DD MMM YYYY')}\n                            </StyledBodyCell>\n                            <StyledBodyCell>\n                              {dayjs(row[6]).format('DD MMM YYYY')}\n                            </StyledBodyCell>\n                            <StyledBodyCell>\n                              <Status\n                                className={\n                                  row[7] === 'active'\n                                    ? active\n                                    : row[7] === 'revoked'\n                                    ? revoked\n                                    : ''\n                                }\n                              >\n                                {row[7]}\n                              </Status>\n                            </StyledBodyCell>\n                          </React.Fragment>\n                        );\n                      })\n                  ) : (\n                    <NoResult\n                      hideButton={false}\n                      style={{\n                        gridColumnStart: '1',\n                        gridColumnEnd: 'one',\n                      }}\n                    />\n                  )\n                ) : null}\n              </StyledTable>\n            </TableWrapper>\n          </Wrapper>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n","import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","import React from 'react';\nexport const CaretDownIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='10'\n      height='5'\n      viewBox='0 0 10 5'\n    >\n      <path\n        data-name='_ionicons_svg_md-arrow-dropdown (2)'\n        d='M128,192l5,5,5-5Z'\n        transform='translate(-128 -192)'\n        fill='currentColor'\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from '../../assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import React, { Reducer, Dispatch, useContext, createContext } from 'react';\n\nexport function useCreateContext<S, A>(\n  defaultValue: S,\n  reducer: Reducer<S, A>\n) {\n  const defaultDispatch: Dispatch<A> = () => defaultValue;\n  const stateCtx = createContext(defaultValue);\n  const dispatchCtx = createContext(defaultDispatch);\n\n  function useStateCtx<K extends keyof S>(property: K) {\n    const state = useContext(stateCtx);\n    return state[property]; // only one depth selector for comparison\n  }\n\n  function useDispatchCtx() {\n    return useContext(dispatchCtx);\n  }\n\n  function Provider({ children }: React.PropsWithChildren<{}>) {\n    const [state, dispatch] = React.useReducer(reducer, defaultValue);\n    return (\n      <dispatchCtx.Provider value={dispatch}>\n        <stateCtx.Provider value={state}>{children}</stateCtx.Provider>\n      </dispatchCtx.Provider>\n    );\n  }\n  return [useStateCtx, useDispatchCtx, Provider] as const;\n}\n\n// const [useTextState, useTextDispatch, TextProvider] = useCreateContext(initialState, reducer);\n// export const TextContext = ctx;\n// export function App() {\n//   return (\n//     <TextProvider>\n//       <Component />\n//     </TextProvider>\n//   )\n// }\n// export function Component() {\n//   const state = useTextState('state')\n//   const dispatch = useTextDispatch()\n// const increment = useCallback(() => dispatch({ type: 'increment' }), [dispatch]);\n//   return (\n//     <div>\n//       {state}\n//       <button onClick={increment}>Toggle</button>\n//     </div>\n//   )\n// }\n","import { useCreateContext } from './create-context';\n\nconst initialState = {\n  isOpen: false,\n  drawerComponent: null,\n  data: null,\n};\ntype State = typeof initialState;\ntype Action = any;\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case 'OPEN_DRAWER':\n      return {\n        ...state,\n        isOpen: true,\n        drawerComponent: action.drawerComponent,\n        data: action.data,\n      };\n    case 'CLOSE_DRAWER':\n      return {\n        ...state,\n        isOpen: false,\n        drawerComponent: null,\n        data: null,\n      };\n    default:\n      return state;\n  }\n}\nconst [useDrawerState, useDrawerDispatch, DrawerProvider] = useCreateContext(\n  initialState,\n  reducer\n);\n\nexport { useDrawerState, useDrawerDispatch, DrawerProvider };\n"],"sourceRoot":""}
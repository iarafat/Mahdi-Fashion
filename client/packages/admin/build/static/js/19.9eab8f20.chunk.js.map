{"version":3,"sources":["components/WrapperStyle.tsx","components/NoResult/no-result.svg","components/NoResult/NoResult.style.tsx","components/NoResult/NoResult.tsx","components/CheckBox/CheckBox.tsx","containers/Category/Category.style.tsx","containers/Category/Category.tsx","components/Button/Button.tsx","components/Button/Button.style.tsx","components/Input/Input.tsx","assets/icons/CaretDownIcon.tsx","components/Select/Select.tsx"],"names":["Wrapper","styled","backgroundColor","Header","display","justifyContent","alignItems","flex","flexDirection","flexWrap","padding","Heading","$theme","typography","fontBold18","color","colors","textDark","margin","paddingTop","module","exports","NoResultWrapper","width","h3","fontSize","fontWeight","p","ImageWrapper","marginTop","maxWidth","img","ButtonWrapper","cursor","height","borderRadius","fontFamily","textDecoration","textTransform","border","transition","NoResult","id","onClick","hideButton","style","src","NoResultSvg","alt","Object","freeze","top","right","bottom","left","Checkbox","props","overflow","backgroundF7","TableWrapper","StyledTable","withStyle","BaseStyledTable","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","alignContent","StyledHeadCell","BaseStyledHeadCell","boxShadow","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","alignSelf","StyledCell","BaseStyledCell","borderColor","icons","Accessories","BathOil","BeautyHealth","Beverage","Breakfast","Cooking","Dairy","Deodorent","Eyes","Face","FacialCare","FruitsVegetable","HandBags","HomeCleaning","LaptopBags","Lips","MeatFish","OralCare","OuterWear","Pants","PetCare","Purse","ShavingNeeds","Shirts","ShoulderBags","Skirts","Snacks","Tops","Wallet","WomenDress","GET_CATEGORIES","gql","Col","Column","marginBottom","Row","Rows","categorySelectOptions","value","label","Category","useState","category","setCategory","search","setSearch","dispatch","useDrawerDispatch","checkedId","setCheckedId","checked","setChecked","openDrawer","useCallback","type","drawerComponent","useQuery","data","error","refetch","message","handleCheckbox","event","name","currentTarget","includes","prevState","filter","Icon","icon","Component","hasOwnProperty","fluid","md","lg","Select","options","labelKey","valueKey","placeholder","searchable","onChange","length","Input","searchBy","clearable","Button","startEnhancer","overrides","BaseButton","$gridTemplateColumns","target","idx","categories","map","Checkmark","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","item","values","row","index","Fragment","key","gridColumnStart","gridColumnEnd","children","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","buttonBorderRadius","SHAPE","pill","round","getBorderRadiiStyles","fontBold14","getInputFontStyle","CaretDownIcon","xmlns","viewBox","data-name","d","transform","fill","getContainerFontStyle","SelectArrow","Popover","Body","zIndex","Placeholder","SingleValue","lineHeight","DropdownListItem","OptionContent","$selected","textNormal","DropdownOption"],"mappings":"yPAEO,MAAMA,EAAUC,YAAO,MAAO,MACnCC,gBAAiB,aAGNC,EAASF,YAAO,SAAU,MACrCG,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,KAAM,WACNC,cAAe,MACfC,SAAU,OACVC,QAAS,OAETR,gBAAiB,UAEjB,4CAA6C,CAC3CQ,QAAS,WAIAC,EAAUV,YAAO,KAAM,EAAGW,YAAH,YAAC,eAChCA,EAAOC,WAAWC,YADa,IAElCC,MAAOH,EAAOI,OAAOC,SACrBC,OAAQ,KAGmBjB,YAAO,MAAO,EAAGW,aAAH,CACzCR,QAAS,OACTC,eAAgB,gBAChBc,WAAY,W,oBC/BdC,EAAOC,QAAU,IAA0B,uC,+ECEpC,MAAMC,EAAkBrB,YAAO,MAAO,MAC3CsB,MAAO,OACPnB,QAAS,OACTI,cAAe,SACfF,WAAY,SACZI,QAAS,YAETc,GAAI,CACFC,SAAU,OACVC,WAAY,IACZX,MAAO,UACPG,OAAQ,YAGVS,EAAG,CACDF,SAAU,OACVC,WAAY,IACZX,MAAO,UACPG,OAAQ,MAICU,EAAe3B,YAAO,MAAO,MACxC4B,UAAW,OACXN,MAAO,OACPO,SAAU,QACV1B,QAAS,OACTE,WAAY,SACZD,eAAgB,SAEhB0B,IAAK,CACHD,SAAU,WAIDE,EAAgB/B,YAAO,MAAO,MACzCsB,MAAO,OACPnB,QAAS,OACTC,eAAgB,SAChBwB,UAAW,UAGS5B,YAAO,SAAU,MACrCgC,OAAQ,UACR7B,QAAS,cACTE,WAAY,SACZD,eAAgB,SAChBU,MAAO,UACPb,gBAAiB,UACjBgC,OAAQ,OACRC,aAAc,MACdC,WAAW,qBACXX,SAAU,OACVC,WAAY,IACZW,eAAgB,OAChBC,cAAe,aACf5B,QAAS,SACT6B,OAAQ,EACRC,WAAY,mB,YCnBCC,IA5B2B,EACxCC,KACAC,UACAC,cAAa,EACbC,WAGE,kBAACvB,EAAD,CAAiBoB,GAAIA,EAAIG,MAAOA,GAC9B,yDAEA,kBAACjB,EAAD,KACE,yBAAKkB,IAAKC,IAAaC,IAAI,eAG5BJ,EACC,kBAACZ,EAAD,KACE,yBAAKW,QAASA,GACZ,kBAAC,IAAD,0BAMF,O,iCCpCV,6BAI+BM,OAAOC,OAAO,CAC3CC,IAAK,MACLC,MAAO,QACPC,OAAQ,SACRC,KAAM,SAOOC,IAJG,IAAkB,IAAbC,EAAY,oBACjC,OAAO,kBAAC,IAAiBA,K,yNCLpB,MAAM5B,EAAe3B,YAAO,MAAO,EAAGW,aAAH,CACxCW,MAAO,OACPW,OAAQ,OACRuB,SAAU,SACVrD,QAAS,OACTE,WAAY,SACZD,eAAgB,SAChB8B,aAAc,OACdjC,gBAAiBU,EAAOI,OAAO0C,gBAQpBC,GALO1D,YAAO,OAAQ,MACjCsB,MAAO,OACPW,OAAQ,UAGkBjC,YAAO,MAAO,MACxCsB,MAAO,OACPW,OAAQ,YAGG0B,EAAcC,YAAUC,IAAiB,MACpDC,oBAAqB,eACrBC,qBAAsB,eACtBC,uBAAwB,eACxBC,wBAAyB,eACzBC,aAAc,WAGHC,EAAiBP,YAAUQ,IAAoB,MAC1DjC,WAAY,qBACZV,WAAY,IACZX,MAAO,qBACPT,WAAY,SACZgE,UAAW,kCACXC,eAAgB,sBAChBC,iBAAkB,sBAClBC,kBAAmB,sBACnBC,gBAAiB,sBACjBC,UAAW,WAGAC,EAAaf,YAAUgB,IAAgB,MAClDzC,WAAY,qBACZV,WAAY,IACZX,MAAO,qBACP4D,UAAW,YAGuBd,YAAUQ,IAAoB,MAChEjC,WAAY,qBACZV,WAAY,IACZX,MAAO,qBACPT,WAAY,SACZgE,UAAW,kCACXQ,YAAa,sBACbH,UAAW,QACXtE,eAAgB,YAGcwD,YAAUgB,IAAgB,MACxDzC,WAAY,qBACZV,WAAY,IACZX,MAAO,qBACP4D,UAAW,SACXtE,eAAgB,Y,oRCflB,IAAI0E,EAAQ,CACVC,YAAaA,IACbC,QAASA,IACTC,aAAcA,IACdC,SAAUA,IACVC,UAAWA,IACXC,QAASA,IACTC,MAAOA,IACPC,UAAWA,IACXC,KAAMA,IACNC,KAAMA,IACNC,WAAYA,IACZC,gBAAiBA,IACjBC,SAAUA,IACVC,aAAcA,IACdC,WAAYA,IACZC,KAAMA,IACNC,SAAUA,IACVC,SAAUA,IACVC,UAAWA,IACXC,MAAOA,IACPC,QAASA,IACTC,MAAOA,IACPC,aAAcA,IACdC,OAAQA,IACRC,aAAcA,IACdC,OAAQA,IACRC,OAAQA,IACRC,KAAMA,IACNC,OAAQA,IACRC,WAAYA,KAEd,MAAMC,EAAiBC,IAAH,KAYdC,EAAMnD,YAAUoD,IAAQ,MAC5B,4CAA6C,CAC3CC,aAAc,OAEd,cAAe,CACbA,aAAc,OAKdC,EAAMtD,YAAUuD,IAAM,MAC1B,4CAA6C,CAC3C9G,WAAY,aAIV+G,EAAwB,CAC5B,CAAEC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,eAAgBC,MAAO,eAChC,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,SAAUC,MAAO,WAGb,SAASC,IAAY,MAAD,EACDC,mBAAS,IADR,mBAC1BC,EAD0B,KAChBC,EADgB,OAELF,mBAAS,IAFJ,mBAE1BG,EAF0B,KAElBC,EAFkB,KAG3BC,EAAWC,cAHgB,EAICN,mBAAS,IAJV,mBAI1BO,EAJ0B,KAIfC,EAJe,OAKHR,oBAAS,GALN,mBAK1BS,EAL0B,KAKjBC,EALiB,KAM3BC,EAAaC,sBACjB,IAAMP,EAAS,CAAEQ,KAAM,cAAeC,gBAAiB,kBACvD,CAACT,IAR8B,EAWAU,YAAS1B,GAAlC2B,EAXyB,EAWzBA,KAAMC,EAXmB,EAWnBA,MAAOC,EAXY,EAWZA,QAErB,GAAID,EACF,OAAO,uCAAaA,EAAME,SAiC5B,SAASC,EAAeC,GAAQ,MACtBC,EAASD,EAAME,cAAfD,KACHf,EAAUiB,SAASF,GAGtBd,EAAciB,GAAcA,EAAUC,OAAQzG,GAAOA,IAAOqG,IAF5Dd,EAAciB,GAAc,IAAIA,EAAWH,IAK/C,SAASK,GAAK,KAAEC,IACd,MAAMC,EAAYvE,EAAMwE,eAAeF,GAAQtE,EAAMsE,GAAQ,OAC7D,OAAO,kBAACC,EAAD,MAET,OACE,kBAAC,IAAD,CAAME,OAAO,GACX,kBAACrC,EAAD,KACE,kBAACH,EAAD,CAAKyC,GAAI,IACP,kBAAC,IAAD,CACE5G,MAAO,CACLqE,aAAc,GACd5C,UAAW,gCAGb,kBAAC0C,EAAD,CAAKyC,GAAI,GACP,kBAAC,IAAD,kBAGF,kBAACzC,EAAD,CAAKyC,GAAI,IACP,kBAACtC,EAAD,KACE,kBAACH,EAAD,CAAKyC,GAAI,EAAGC,GAAI,GACd,kBAACC,EAAA,EAAD,CACEC,QAASvC,EACTwC,SAAS,QACTC,SAAS,QACTC,YAAY,gBACZzC,MAAOI,EACPsC,YAAY,EACZC,SA3DlB,UAAwB,MAAE3C,IACxBK,EAAYL,GACRA,EAAM4C,OACRvB,EAAQ,CACNL,KAAMhB,EAAM,GAAGA,QAGjBqB,EAAQ,CACNL,KAAM,WAuDE,kBAACtB,EAAD,CAAKyC,GAAI,EAAGC,GAAI,GACd,kBAACS,EAAA,EAAD,CACE7C,MAAOM,EACPmC,YAAY,qBACZE,SA3ElB,SAAsBnB,GACpB,MAAMxB,EAAQwB,EAAME,cAAc1B,MAClCO,EAAUP,GACVqB,EAAQ,CACNL,KAAMZ,EAASwC,OAASxC,EAAS,GAAGJ,MAAQ,KAC5C8C,SAAU9C,KAuEI+C,WAAS,KAIb,kBAACrD,EAAD,CAAKyC,GAAI,EAAGC,GAAI,GACd,kBAACY,EAAA,EAAD,CACE3H,QAASyF,EACTmC,cAAe,IAAM,kBAAC,IAAD,MACrBC,UAAW,CACTC,WAAY,CACV5H,MAAO,MACLtB,MAAO,OACPwC,oBAAqB,MACrBC,qBAAsB,MACtBC,uBAAwB,MACxBC,wBAAyB,WAVjC,oBAsBR,kBAAC,IAAD,CAASrB,MAAO,CAAEyB,UAAW,iCAC3B,kBAACX,EAAD,KACE,kBAACC,EAAD,CAAa8G,qBAAqB,yGAChC,kBAACtG,EAAD,KACE,kBAAC,IAAD,CACEkE,KAAK,WACLhB,MAAM,WACNY,QAASA,EACT+B,SA1FlB,SAAoBnB,GAClB,GAAIA,EAAM6B,OAAOzC,QAAS,CACxB,MAAM0C,EAAMnC,GAAQA,EAAKoC,WAAWC,IAAKpD,GAAaA,EAAShF,IAC/DuF,EAAa2C,QAEb3C,EAAa,IAEfE,EAAWW,EAAM6B,OAAOzC,UAoFRsC,UAAW,CACTO,UAAW,CACTlI,MAAO,CACLmI,eAAgB,MAChBC,iBAAkB,MAClBC,kBAAmB,MACnBC,gBAAiB,MACjBpH,oBAAqB,MACrBC,qBAAsB,MACtBE,wBAAyB,MACzBD,uBAAwB,YAMlC,kBAACG,EAAD,WACA,kBAACA,EAAD,cACA,kBAACA,EAAD,aACA,kBAACA,EAAD,aACA,kBAACA,EAAD,aAECqE,EACCA,EAAKoC,WAAWX,OACdzB,EAAKoC,WACFC,IAAKM,GAASnI,OAAOoI,OAAOD,IAC5BN,IAAI,CAACQ,EAAKC,IACT,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACnB,kBAAC3G,EAAD,KACE,kBAAC,IAAD,CACEmE,KAAMuC,EAAI,GACVpD,QAASF,EAAUiB,SAASqC,EAAI,IAChCrB,SAAUpB,EACV2B,UAAW,CACTO,UAAW,CACTlI,MAAO,CACLmI,eAAgB,MAChBC,iBAAkB,MAClBC,kBAAmB,MACnBC,gBAAiB,MACjBpH,oBAAqB,MACrBC,qBAAsB,MACtBE,wBAAyB,MACzBD,uBAAwB,YAMlC,kBAACW,EAAD,KAAa0G,EAAI,IACjB,kBAAC1G,EAAD,KACE,kBAAChD,EAAD,KACE,kBAACwH,EAAD,CAAMC,KAAMiC,EAAI,OAGpB,kBAAC1G,EAAD,KAAa0G,EAAI,IACjB,kBAAC1G,EAAD,KAAa0G,EAAI,IACjB,kBAAC1G,EAAD,KAAa0G,EAAI,MAIvB,kBAAC7I,EAAA,EAAD,CACEG,YAAY,EACZC,MAAO,CACL6I,gBAAiB,IACjBC,cAAe,SAInB,a,0HCvSLrB,IAtBC,IAA4C,IAA1CsB,EAAyC,EAAzCA,SAAUpB,EAA+B,EAA/BA,UAAchH,EAAiB,wCACzD,OACE,kBAAC,IAAD,iBACMA,EADN,CAEEgH,UAAS,aACPC,WAAY,CACV5H,MAAO,EAAGjC,SAAQiL,QAAOC,YAChB,2BCTa,GAAGlL,SAAQiL,YACzC,OAAQA,GACN,KAAKE,IAAKC,QAKV,KAAKD,IAAKE,MAKV,QACE,MAAO,CACLC,YAAatL,EAAOuL,OAAOC,QAC3BC,aAAczL,EAAOuL,OAAOC,WDLnBE,CAAiB,CAAE1L,SAAQiL,WCUR,GAAGjL,SAAQiL,QAAOC,aACpD,IAAIxE,EAAQ1G,EAAO2L,mBAcnB,OAZIT,IAAWU,IAAMC,KAEjBnF,EADEuE,IAAUE,IAAKC,QACT,OACCH,IAAUE,IAAKE,MAChB,OAEA,OAEDH,IAAWU,IAAME,QAC1BpF,EAAQ,OAGH,CACLtD,qBAAsBsD,EACtBpD,wBAAyBoD,EACzBvD,oBAAqBuD,EACrBrD,uBAAwBqD,ID5BXqF,CAAqB,CAAE/L,SAAQiL,QAAOC,cAI5CtB,KAGJoB,K,qEEQQzB,IAlBA,IAAkB,IAAb3G,EAAY,oBAC9B,OACE,kBAAC,IAAD,eACEgH,UAAW,CACTL,MAAO,CACLtH,MAAO,EAAGjC,YACD,eAbO,GAAGA,YACpB,aACLG,MAAOH,EAAOI,OAAOC,UAClBL,EAAOC,WAAW+L,YAWRC,CAAkB,CAAEjM,eAK3B4C,M,qECrBH,MAAMsJ,EAAgB,IAEzB,yBACEC,MAAM,6BACNxL,MAAM,KACNW,OAAO,IACP8K,QAAQ,YAER,0BACEC,YAAU,sCACVC,EAAE,oBACFC,UAAU,uBACVC,KAAK,kBCTAC,EAAwB,EAAGzM,YAC/BA,EAAOC,WAAW+L,WAGZ,QAAmB,IAAbpJ,EAAY,oBAC/B,OACE,gBAAC,IAAD,eACEgH,UAAW,CACT8C,YAAa,IACJ,gBAACR,EAAD,MAETS,QAAS,CACP/J,MAAO,CACLgH,UAAW,CACTgD,KAAM,CACJ3K,MAAO,CAAE4K,OAAQ,OAKzBC,YAAa,CACX7K,MAAO,EAAGjC,YAAH,aACLG,MAAOH,EAAOI,OAAOC,UAClBoM,EAAsB,CAAEzM,aAG/B+M,YAAa,CACX9K,MAAO,EAAGjC,YAAH,YAAC,eACHyM,EAAsB,CAAEzM,YADtB,IAELG,MAAOH,EAAOI,OAAOC,SACrB2M,WAAY,SAGhBC,iBAAkB,CAChBhL,MAAO,EAAGjC,aAAH,CACLa,SAAU,OACVC,WAAY,MACZX,MAAOH,EAAOI,OAAOC,YAGzB6M,cAAe,CACbjL,MAAO,EAAGjC,SAAQmN,eACT,2BACFnN,EAAOC,WAAW+L,YADvB,IAEE7L,MAAOgN,EACHnN,EAAOI,OAAOC,SACdL,EAAOI,OAAOgN,cAIxBC,eAAgB,CACdpL,MAAO,EAAGjC,aAAH,CACLa,SAAU,OACVC,WAAY,MACZX,MAAOH,EAAOI,OAAOC,cAIvBuC","file":"static/js/19.9eab8f20.chunk.js","sourcesContent":["import { styled } from 'baseui';\n\nexport const Wrapper = styled('div', () => ({\n  backgroundColor: '#ffffff',\n}));\n\nexport const Header = styled('header', () => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flex: '0 1 auto',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  padding: '40px',\n  /* margin-bottom: 40px, */\n  backgroundColor: '#ffffff',\n\n  '@media only screen and (max-width: 990px)': {\n    padding: '20px',\n  },\n}));\n\nexport const Heading = styled('h2', ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  color: $theme.colors.textDark,\n  margin: 0,\n}));\n\nexport const ButtonWrapper = styled('div', ({ $theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  paddingTop: '20px',\n}));\n","module.exports = __webpack_public_path__ + \"static/media/no-result.e1457eaf.svg\";","import { styled } from 'baseui';\n\nexport const NoResultWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '50px 20px',\n\n  h3: {\n    fontSize: '24px',\n    fontWeight: 700,\n    color: '#161f6a',\n    margin: '0 0 15px',\n  },\n\n  p: {\n    fontSize: '16px',\n    fontWeight: 400,\n    color: '#707070',\n    margin: 0,\n  },\n}));\n\nexport const ImageWrapper = styled('div', () => ({\n  marginTop: '50px',\n  width: '100%',\n  maxWidth: '600px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  img: {\n    maxWidth: '100%',\n  },\n}));\n\nexport const ButtonWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '70px',\n}));\n\nexport const Button = styled('button', () => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#ffffff',\n  backgroundColor: '#009e7f',\n  height: '50px',\n  borderRadius: '3px',\n  fontFamily: `'Lato', sans-serif`,\n  fontSize: '16px',\n  fontWeight: 700,\n  textDecoration: 'none',\n  textTransform: 'capitalize',\n  padding: '0 30px',\n  border: 0,\n  transition: 'all 0.3s ease',\n}));\n","import React from \"react\";\nimport NoResultSvg from \"./no-result.svg\";\nimport { NoResultWrapper, ImageWrapper, ButtonWrapper } from \"./NoResult.style\";\nimport Button from \"../Button/Button\";\n// import { ArrowPrev } from '../AllSvgIcon';\n\ntype NoResultProps = {\n  id?: string;\n  onClick?: () => void;\n  hideButton?: boolean;\n  style?: any;\n};\n\nconst NoResult: React.FC<NoResultProps> = ({\n  id,\n  onClick,\n  hideButton = true,\n  style\n}) => {\n  return (\n    <NoResultWrapper id={id} style={style}>\n      <h3>Sorry, No result found :(</h3>\n\n      <ImageWrapper>\n        <img src={NoResultSvg} alt=\"No Result\" />\n      </ImageWrapper>\n\n      {hideButton ? (\n        <ButtonWrapper>\n          <div onClick={onClick}>\n            <Button>\n              Try Again Later\n              {/* <ArrowPrev /> Go Back */}\n            </Button>\n          </div>\n        </ButtonWrapper>\n      ) : null}\n    </NoResultWrapper>\n  );\n};\n\nexport default NoResult;\n","import React from 'react';\nimport { Checkbox as BaseCheckbox } from 'baseui/checkbox';\nexport { STYLE_TYPE } from 'baseui/checkbox';\n\nexport const LABEL_PLACEMENT = Object.freeze({\n  top: 'top',\n  right: 'right',\n  bottom: 'bottom',\n  left: 'left',\n});\n\nconst Checkbox = ({ ...props }) => {\n  return <BaseCheckbox {...props} />;\n};\n\nexport default Checkbox;\n","import { styled, withStyle } from 'baseui';\nimport {\n  StyledTable as BaseStyledTable,\n  StyledHeadCell as BaseStyledHeadCell,\n  StyledBodyCell as BaseStyledCell,\n} from 'baseui/table-grid';\n\nexport const ImageWrapper = styled('div', ({ $theme }) => ({\n  width: '40px',\n  height: '40px',\n  overflow: 'hidden',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  borderRadius: '20px',\n  backgroundColor: $theme.colors.backgroundF7,\n}));\n\nexport const Icon = styled('span', () => ({\n  width: '100%',\n  height: 'auto',\n}));\n\nexport const TableWrapper = styled('div', () => ({\n  width: '100%',\n  height: '450px',\n}));\n\nexport const StyledTable = withStyle(BaseStyledTable, () => ({\n  borderTopLeftRadius: '0 !important',\n  borderTopRightRadius: '0 !important',\n  borderBottomLeftRadius: '0 !important',\n  borderBottomRightRadius: '0 !important',\n  alignContent: 'start',\n}));\n\nexport const StyledHeadCell = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n}));\n\nexport const StyledCell = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n}));\n\nexport const StyledHeadCellCenter = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n  justifyContent: 'center',\n}));\n\nexport const StyledCellCenter = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n  justifyContent: 'center',\n}));\n","import React, { useCallback, useState } from 'react';\nimport { withStyle } from 'baseui';\nimport {\n  Grid,\n  Row as Rows,\n  Col as Column,\n} from '../../components/FlexBox/FlexBox';\nimport { useDrawerDispatch } from '../../context/DrawerContext';\nimport Select from '../../components/Select/Select';\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport Checkbox from '../../components/CheckBox/CheckBox';\nimport gql from 'graphql-tag';\nimport { useQuery } from '@apollo/react-hooks';\nimport { Wrapper, Header, Heading } from '../../components/WrapperStyle';\nimport {\n  TableWrapper,\n  StyledTable,\n  StyledHeadCell,\n  StyledCell,\n  ImageWrapper,\n} from './Category.style';\n\nimport {\n  Plus,\n  Accessories,\n  BathOil,\n  BeautyHealth,\n  Beverage,\n  Breakfast,\n  Cooking,\n  Dairy,\n  Deodorent,\n  Eyes,\n  Face,\n  FacialCare,\n  FruitsVegetable,\n  HandBags,\n  HomeCleaning,\n  LaptopBags,\n  Lips,\n  MeatFish,\n  OralCare,\n  OuterWear,\n  Pants,\n  PetCare,\n  Purse,\n  ShavingNeeds,\n  Shirts,\n  ShoulderBags,\n  Skirts,\n  Snacks,\n  Tops,\n  Wallet,\n  WomenDress,\n} from '../../components/AllSvgIcon';\nimport NoResult from '../../components/NoResult/NoResult';\nlet icons = {\n  Accessories: Accessories,\n  BathOil: BathOil,\n  BeautyHealth: BeautyHealth,\n  Beverage: Beverage,\n  Breakfast: Breakfast,\n  Cooking: Cooking,\n  Dairy: Dairy,\n  Deodorent: Deodorent,\n  Eyes: Eyes,\n  Face: Face,\n  FacialCare: FacialCare,\n  FruitsVegetable: FruitsVegetable,\n  HandBags: HandBags,\n  HomeCleaning: HomeCleaning,\n  LaptopBags: LaptopBags,\n  Lips: Lips,\n  MeatFish: MeatFish,\n  OralCare: OralCare,\n  OuterWear: OuterWear,\n  Pants: Pants,\n  PetCare: PetCare,\n  Purse: Purse,\n  ShavingNeeds: ShavingNeeds,\n  Shirts: Shirts,\n  ShoulderBags: ShoulderBags,\n  Skirts: Skirts,\n  Snacks: Snacks,\n  Tops: Tops,\n  Wallet: Wallet,\n  WomenDress: WomenDress,\n};\nconst GET_CATEGORIES = gql`\n  query getCategories($type: String, $searchBy: String) {\n    categories(type: $type, searchBy: $searchBy) {\n      id\n      icon\n      name\n      slug\n      type\n    }\n  }\n`;\n\nconst Col = withStyle(Column, () => ({\n  '@media only screen and (max-width: 767px)': {\n    marginBottom: '20px',\n\n    ':last-child': {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst Row = withStyle(Rows, () => ({\n  '@media only screen and (min-width: 768px)': {\n    alignItems: 'center',\n  },\n}));\n\nconst categorySelectOptions = [\n  { value: 'grocery', label: 'Grocery' },\n  { value: 'women-cloths', label: 'Women Cloth' },\n  { value: 'bags', label: 'Bags' },\n  { value: 'makeup', label: 'Makeup' },\n];\n\nexport default function Category() {\n  const [category, setCategory] = useState([]);\n  const [search, setSearch] = useState('');\n  const dispatch = useDrawerDispatch();\n  const [checkedId, setCheckedId] = useState([]);\n  const [checked, setChecked] = useState(false);\n  const openDrawer = useCallback(\n    () => dispatch({ type: 'OPEN_DRAWER', drawerComponent: 'CATEGORY_FORM' }),\n    [dispatch]\n  );\n\n  const { data, error, refetch } = useQuery(GET_CATEGORIES);\n\n  if (error) {\n    return <div>Error! {error.message}</div>;\n  }\n  function handleSearch(event) {\n    const value = event.currentTarget.value;\n    setSearch(value);\n    refetch({\n      type: category.length ? category[0].value : null,\n      searchBy: value,\n    });\n  }\n  function handleCategory({ value }) {\n    setCategory(value);\n    if (value.length) {\n      refetch({\n        type: value[0].value,\n      });\n    } else {\n      refetch({\n        type: null,\n      });\n    }\n  }\n\n  function onAllCheck(event) {\n    if (event.target.checked) {\n      const idx = data && data.categories.map((category) => category.id);\n      setCheckedId(idx);\n    } else {\n      setCheckedId([]);\n    }\n    setChecked(event.target.checked);\n  }\n\n  function handleCheckbox(event) {\n    const { name } = event.currentTarget;\n    if (!checkedId.includes(name)) {\n      setCheckedId((prevState) => [...prevState, name]);\n    } else {\n      setCheckedId((prevState) => prevState.filter((id) => id !== name));\n    }\n  }\n  function Icon({ icon }) {\n    const Component = icons.hasOwnProperty(icon) ? icons[icon] : 'span';\n    return <Component />;\n  }\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col md={12}>\n          <Header\n            style={{\n              marginBottom: 30,\n              boxShadow: '0 0 5px rgba(0, 0 ,0, 0.05)',\n            }}\n          >\n            <Col md={2}>\n              <Heading>Category</Heading>\n            </Col>\n\n            <Col md={10}>\n              <Row>\n                <Col md={3} lg={3}>\n                  <Select\n                    options={categorySelectOptions}\n                    labelKey='label'\n                    valueKey='value'\n                    placeholder='Category Type'\n                    value={category}\n                    searchable={false}\n                    onChange={handleCategory}\n                  />\n                </Col>\n\n                <Col md={5} lg={6}>\n                  <Input\n                    value={search}\n                    placeholder='Ex: Search By Name'\n                    onChange={handleSearch}\n                    clearable\n                  />\n                </Col>\n\n                <Col md={4} lg={3}>\n                  <Button\n                    onClick={openDrawer}\n                    startEnhancer={() => <Plus />}\n                    overrides={{\n                      BaseButton: {\n                        style: () => ({\n                          width: '100%',\n                          borderTopLeftRadius: '3px',\n                          borderTopRightRadius: '3px',\n                          borderBottomLeftRadius: '3px',\n                          borderBottomRightRadius: '3px',\n                        }),\n                      },\n                    }}\n                  >\n                    Add Category\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Header>\n\n          <Wrapper style={{ boxShadow: '0 0 5px rgba(0, 0 , 0, 0.05)' }}>\n            <TableWrapper>\n              <StyledTable $gridTemplateColumns='minmax(70px, 70px) minmax(70px, 70px) minmax(70px, 70px) minmax(150px, auto) minmax(150px, auto) auto'>\n                <StyledHeadCell>\n                  <Checkbox\n                    type='checkbox'\n                    value='checkAll'\n                    checked={checked}\n                    onChange={onAllCheck}\n                    overrides={{\n                      Checkmark: {\n                        style: {\n                          borderTopWidth: '2px',\n                          borderRightWidth: '2px',\n                          borderBottomWidth: '2px',\n                          borderLeftWidth: '2px',\n                          borderTopLeftRadius: '4px',\n                          borderTopRightRadius: '4px',\n                          borderBottomRightRadius: '4px',\n                          borderBottomLeftRadius: '4px',\n                        },\n                      },\n                    }}\n                  />\n                </StyledHeadCell>\n                <StyledHeadCell>Id</StyledHeadCell>\n                <StyledHeadCell>Image</StyledHeadCell>\n                <StyledHeadCell>Name</StyledHeadCell>\n                <StyledHeadCell>Slug</StyledHeadCell>\n                <StyledHeadCell>Type</StyledHeadCell>\n\n                {data ? (\n                  data.categories.length ? (\n                    data.categories\n                      .map((item) => Object.values(item))\n                      .map((row, index) => (\n                        <React.Fragment key={index}>\n                          <StyledCell>\n                            <Checkbox\n                              name={row[0]}\n                              checked={checkedId.includes(row[0])}\n                              onChange={handleCheckbox}\n                              overrides={{\n                                Checkmark: {\n                                  style: {\n                                    borderTopWidth: '2px',\n                                    borderRightWidth: '2px',\n                                    borderBottomWidth: '2px',\n                                    borderLeftWidth: '2px',\n                                    borderTopLeftRadius: '4px',\n                                    borderTopRightRadius: '4px',\n                                    borderBottomRightRadius: '4px',\n                                    borderBottomLeftRadius: '4px',\n                                  },\n                                },\n                              }}\n                            />\n                          </StyledCell>\n                          <StyledCell>{row[0]}</StyledCell>\n                          <StyledCell>\n                            <ImageWrapper>\n                              <Icon icon={row[1]} />\n                            </ImageWrapper>\n                          </StyledCell>\n                          <StyledCell>{row[2]}</StyledCell>\n                          <StyledCell>{row[3]}</StyledCell>\n                          <StyledCell>{row[4]}</StyledCell>\n                        </React.Fragment>\n                      ))\n                  ) : (\n                    <NoResult\n                      hideButton={false}\n                      style={{\n                        gridColumnStart: '1',\n                        gridColumnEnd: 'one',\n                      }}\n                    />\n                  )\n                ) : null}\n              </StyledTable>\n            </TableWrapper>\n          </Wrapper>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","import React from 'react';\nexport const CaretDownIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='10'\n      height='5'\n      viewBox='0 0 10 5'\n    >\n      <path\n        data-name='_ionicons_svg_md-arrow-dropdown (2)'\n        d='M128,192l5,5,5-5Z'\n        transform='translate(-128 -192)'\n        fill='currentColor'\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from '../../assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n"],"sourceRoot":""}
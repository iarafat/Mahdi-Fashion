{"version":3,"sources":["components/FormFields/FormFields.tsx","components/DrawerBox/DrawerBox.tsx","containers/DrawerItems/DrawerItems.style.tsx","assets/icons/UploadIcon.tsx","components/Uploader/Uploader.tsx","components/Textarea/Textarea.tsx","containers/SiteSettingForm/SiteSettingForm.tsx","components/Button/Button.tsx","components/Button/Button.style.tsx","components/FlexBox/FlexBox.ts","components/Input/Input.tsx","assets/icons/CaretDownIcon.tsx","components/Select/Select.tsx"],"names":["Title","styled","$theme","typography","font18","marginTop","marginBottom","color","colors","textDark","textAlign","Label","fontBold14","Msg","fontBold12","red400","marginLeft","FormFields","children","overrides","Block","style","width","display","flexDirection","margin","FormLabel","FormTitle","Error","DrawerBox","height","padding","borderRadius","backgroundColor","Form","backgroundF7","paddingBottom","DrawerTitleWrapper","alignItems","justifyContent","position","DrawerTitle","fontBold18","FieldDetails","font14","textNormal","ButtonGroup","bottom","right","boxShadow","UploadIcon","xmlns","viewBox","transform","data-name","d","fill","Text","fontFamily","primaryFontFamily","TextHighlighted","primary","fontWeight","Container","props","flex","borderWidth","borderColor","borderStyle","outline","transition","cursor","ThumbsContainer","flexWrap","Thumb","borders","borderEA","marginRight","boxSizing","thumbInner","minWidth","overflow","img","Uploader","onChange","imageURL","useState","name","preview","files","setFiles","useDropzone","accept","multiple","onDrop","useCallback","acceptedFiles","map","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","thumbs","key","src","alt","useEffect","forEach","revokeObjectURL","className","Textarea","Input","getInputFontStyle","options","value","label","SiteSettingsForm","useForm","register","handleSubmit","setValue","category","setCategory","React","description","setDescription","fluid","onSubmit","data","console","log","md","inputRef","required","maxLength","e","target","labelKey","valueKey","placeholder","searchable","Placeholder","DropdownListItem","OptionContent","$selected","SingleValue","Popover","Body","zIndex","type","BaseButton","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","Button","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","buttonBorderRadius","SHAPE","pill","round","getBorderRadiiStyles","Grid","Grids","Row","Rows","Col","Cols","CaretDownIcon","getContainerFontStyle","SelectArrow","lineHeight","fontSize","DropdownOption"],"mappings":"oTAIA,MAAMA,EAAQC,YAAO,KAAM,EAAGC,YAAH,YAAC,eACvBA,EAAOC,WAAWC,QADI,IAEzBC,UAAW,IACXC,aAAc,IACdC,MAAOL,EAAOM,OAAOC,SACrBC,UAAW,YAGPC,EAAQV,YAAO,QAAS,EAAGC,YAAH,YAAC,eAC1BA,EAAOC,WAAWS,YADO,IAE5BN,aAAc,OACdC,MAAOL,EAAOM,OAAOC,YAGjBI,EAAMZ,YAAO,OAAQ,EAAGC,YAAH,YAAC,eACvBA,EAAOC,WAAWW,YADI,IAEzBP,MAAOL,EAAOM,OAAOO,OACrBV,UAAW,MACXW,WAAY,UAGDC,EAAa,EAAGC,cAEzB,kBAAC,IAAD,CACEC,UAAW,CACTC,MAAO,CACLC,MAAO,CACLC,MAAO,OACPC,QAAS,OACTC,cAAe,SACfC,OAAQ,SAER,eAAgB,CACdpB,UAAW,GAGb,cAAe,CACbC,aAAc,GAGhB,cAAe,CACbmB,OAAQ,OAMfP,GAKMQ,EAAY,EAAGR,cACnB,kBAACP,EAAD,KAAQO,GAGJS,EAAY,EAAGT,cACnB,kBAAClB,EAAD,KAAQkB,GAGJU,EAAQ,EAAGV,cACf,kBAACL,EAAD,KAAMK,I,sECzCAW,IArBG,EAAGV,YAAWD,cAE5B,kBAAC,IAAD,CACEC,UAAS,aACPC,MAAO,CACLC,MAAO,CACLC,MAAO,OACPQ,OAAQ,OACRC,QAAS,OACTC,aAAc,MACdC,gBAAiB,aAGlBd,IAGJD,I,+NCjBA,MAAMgB,EAAOjC,YAAO,OAAQ,EAAGC,aAAH,CAEjC+B,gBAAiB/B,EAAOM,OAAO2B,aAC/BC,cAAe,WAGJC,EAAqBpC,YAAO,MAAO,EAAGC,aAAH,CAC9CqB,QAAS,OACTe,WAAY,SACZC,eAAgB,gBAChBd,OAAQ,eACRe,SAAU,WAGCC,EAAcxC,YAAO,KAAM,EAAGC,YAAH,YAAC,eACpCA,EAAOC,WAAWuC,YADiB,IAEtCjB,OAAQ,EACRlB,MAAOL,EAAOM,OAAOC,YAGVkC,EAAe1C,YAAO,OAAQ,EAAGC,YAAH,YAAC,eACvCA,EAAOC,WAAWyC,QADoB,IAEzCb,QAAS,cACTxB,MAAOL,EAAOM,OAAOqC,WACrBtB,QAAS,QAET,4CAA6C,CAC3CQ,QAAS,aAIAe,EAAc7C,YAAO,MAAO,EAAGC,aAAH,CACvC6B,QAAS,YACTR,QAAS,OACTe,WAAY,SACZE,SAAU,QACVO,OAAQ,IACRC,MAAO,IACP1B,MAAO,OACPW,gBAAiB,UACjBgB,UAAW,6BAEX,4CAA6C,CAC3ClB,QAAS,iB,sFC5CN,MAAMmB,EAAa,EACxB3C,QAAQ,eACRe,QAAQ,OACRQ,SAAS,UAGP,yBACEqB,MAAM,6BACN7B,MAAOA,EACPQ,OAAQA,EACRsB,QAAQ,iBAER,uBAAGC,UAAU,wBACX,0BACEC,YAAU,YACVC,EAAE,okBACFF,UAAU,eACVG,KAAK,cCbTC,EAAOxD,YAAO,OAAQ,EAAGC,YAAH,YAAC,eACxBA,EAAOC,WAAWyC,QADK,IAE1Bc,WAAYxD,EAAOC,WAAWwD,kBAC9BpD,MAAOL,EAAOM,OAAOC,SACrBJ,UAAW,OACXK,UAAW,YAGPkD,EAAkB3D,YAAO,OAAQ,EAAGC,aAAH,CACrCK,MAAOL,EAAOM,OAAOqD,QACrBC,WAAY,UAGRC,EAAY9D,YAAO,MAAO,EAAG+D,YAAH,CAC9BC,KAAM,IACN1C,QAAS,OACTC,cAAe,SACfc,WAAY,SACZP,QAAS,OACTmC,YAAa,MACblC,aAAc,MACdmC,YAAa,UACbC,YAAa,SACbnC,gBAAiB,UACjB1B,MAAO,UACP8D,QAAS,OACTC,WAAY,2BACZC,OAAQ,aAGJC,EAAkBvE,YAAO,QAAS,MACtCsB,QAAS,OACTC,cAAe,MACfiD,SAAU,OACVpE,UAAW,UAGPqE,EAAQzE,YAAO,MAAO,EAAGC,YAAH,YAAC,eACxBA,EAAOyE,QAAQC,UADQ,IAE1BrD,QAAS,cACTS,aAAc,MACd1B,aAAc,MACduE,YAAa,MACbvD,MAAO,QACPQ,OAAQ,QACRC,QAAS,MACT+C,UAAW,gBAGPC,EAAa,CACjBxD,QAAS,OACTyD,SAAU,EACVC,SAAU,UAGNC,EAAM,CACV3D,QAAS,QACTD,MAAO,OACPQ,OAAQ,QAuDKqD,IApDf,UAAkB,SAAEC,EAAF,SAAYC,IAAkB,MAAD,EACnBC,mBACxBD,EAAW,CAAC,CAAEE,KAAM,OAAQC,QAASH,IAAc,IAFR,mBACtCI,EADsC,KAC/BC,EAD+B,OAILC,YAAY,CAClDC,OAAQ,UACRC,UAAU,EACVC,OAAQC,sBACLC,IACCN,EACEM,EAAcC,IAAKC,GACjBC,OAAOC,OAAOF,EAAM,CAClBV,QAASa,IAAIC,gBAAgBJ,OAInCd,EAASY,IAEX,CAACZ,MAdGmB,EAJqC,EAIrCA,aAAcC,EAJuB,EAIvBA,cAkBhBC,EAAShB,EAAMQ,IAAKC,GACxB,kBAACxB,EAAD,CAAOgC,IAAKR,EAAKX,MACf,yBAAKlE,MAAO0D,GACV,yBAAK4B,IAAKT,EAAKV,QAASnE,MAAO6D,EAAK0B,IAAKV,EAAKX,UAapD,OARAsB,oBACE,IAAM,KAEJpB,EAAMqB,QAASZ,GAASG,IAAIU,gBAAgBb,EAAKV,WAEnD,CAACC,IAID,6BAASuB,UAAU,sBACjB,kBAACjD,EAAcwC,IACb,0BAAWC,KACX,kBAACtD,EAAD,MACA,kBAACO,EAAD,KACE,kBAACG,EAAD,oBADF,sBAID6C,GAAU,kBAACjC,EAAD,KAAkBiC,M,wGC9GnC,MAOaQ,EAAY,IAAkB,IAAbjD,EAAY,oBACxC,OACE,kBAAC,IAAD,eACE7C,UAAW,CACT+F,MAAO,CACL7F,MAAO,EAAGnB,YACD,eAbO,GAAGA,YACpB,aACLK,MAAOL,EAAOM,OAAOC,UAClBP,EAAOC,WAAWS,YAWRuG,CAAkB,CAAEjH,eAK3B8D,M,kKCVV,MAAMoD,EAAU,CACd,CAAEC,MAAO,SAAUC,MAAO,UAC1B,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,WAAYC,MAAO,SAgJfC,UA7I2B,KAAO,MAAD,EACDC,cAArCC,EADsC,EACtCA,SAAUC,EAD4B,EAC5BA,aAAcC,EADc,EACdA,SADc,EAGdrC,mBAAS,IAHK,mBAGvCsC,EAHuC,KAG7BC,EAH6B,OAIRC,IAAMxC,SAAS,IAJP,mBAIvCyC,EAJuC,KAI1BC,EAJ0B,KAgB9C,OAJAF,IAAMjB,UAAU,KACdY,EAAS,CAAElC,KAAM,gBACjBkC,EAAS,CAAElC,KAAM,mBAChB,CAACkC,IAEF,kBAAC,IAAD,CAAMQ,OAAO,GACX,kBAAC,IAAD,CAAMC,SAAUR,EAhBFS,GAASC,QAAQC,IAAIF,IAgBK9G,MAAO,CAAEe,cAAe,IAC9D,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKkG,GAAI,GACP,kBAAC,IAAD,oCAGF,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUlD,SAjBEK,IACtBkC,EAAS,gBAAiBlC,SAqBtB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAK6C,GAAI,GACP,kBAAC,IAAD,uEAKF,kBAAC,IAAD,CAAKA,GAAI,GACP,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,kBACA,kBAAC,IAAD,CACE/C,KAAK,YACLgD,SAAUd,EAAS,CAAEe,UAAU,EAAMC,UAAW,QAIpD,kBAAC,IAAD,KACE,kBAAC,IAAD,yBACA,kBAAC,IAAD,CACEpB,MAAOU,EACP3C,SAAWsD,GAAMV,EAAeU,EAAEC,OAAOtB,UAI7C,kBAAC,IAAD,KACE,kBAAC,IAAD,eACA,kBAAC,IAAD,CACED,QAASA,EACTwB,SAAS,QACTC,SAAS,QACTC,YAAY,wBACZzB,MAAOO,EACPmB,YAAY,EACZ3D,SA5DU,EAAGiC,YAC3BM,EAAS,cAAeN,GACxBQ,EAAYR,IA2DElG,UAAW,CACT6H,YAAa,CACX3H,MAAO,EAAGnB,YACD,2BACFA,EAAOC,WAAWS,YADvB,IAEEL,MAAOL,EAAOM,OAAOqC,cAI3BoG,iBAAkB,CAChB5H,MAAO,EAAGnB,YACD,2BACFA,EAAOC,WAAWS,YADvB,IAEEL,MAAOL,EAAOM,OAAOqC,cAI3BqG,cAAe,CACb7H,MAAO,EAAGnB,SAAQiJ,eACT,2BACFjJ,EAAOC,WAAWS,YADvB,IAEEL,MAAO4I,EACHjJ,EAAOM,OAAOC,SACdP,EAAOM,OAAOqC,cAIxBuG,YAAa,CACX/H,MAAO,EAAGnB,YACD,2BACFA,EAAOC,WAAWS,YADvB,IAEEL,MAAOL,EAAOM,OAAOqC,cAI3BwG,QAAS,CACPrF,MAAO,CACL7C,UAAW,CACTmI,KAAM,CACJjI,MAAO,CAAEkI,OAAQ,WAS/B,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,KAAK,SACLrI,UAAW,CACTsI,WAAY,CACVpI,MAAO,EAAGnB,aAAH,CACLoB,MAAO,MACPN,WAAY,OACZ0I,oBAAqB,MACrBC,qBAAsB,MACtBC,uBAAwB,MACxBC,wBAAyB,WAVjC,kB,0HC3GDC,IAtBC,IAA4C,IAA1C5I,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAc6C,EAAiB,wCACzD,OACE,kBAAC,IAAD,iBACMA,EADN,CAEE7C,UAAS,aACPsI,WAAY,CACVpI,MAAO,EAAGnB,SAAQ6J,QAAOC,YAChB,2BCTa,GAAG9J,SAAQ6J,YACzC,OAAQA,GACN,KAAKE,IAAKC,QAKV,KAAKD,IAAKE,MAKV,QACE,MAAO,CACLC,YAAalK,EAAOmK,OAAOC,QAC3BC,aAAcrK,EAAOmK,OAAOC,WDLnBE,CAAiB,CAAEtK,SAAQ6J,WCUR,GAAG7J,SAAQ6J,QAAOC,aACpD,IAAI3C,EAAQnH,EAAOuK,mBAcnB,OAZIT,IAAWU,IAAMC,KAEjBtD,EADE0C,IAAUE,IAAKC,QACT,OACCH,IAAUE,IAAKE,MAChB,OAEA,OAEDH,IAAWU,IAAME,QAC1BvD,EAAQ,OAGH,CACLsC,qBAAsBtC,EACtBwC,wBAAyBxC,EACzBqC,oBAAqBrC,EACrBuC,uBAAwBvC,ID5BXwD,CAAqB,CAAE3K,SAAQ6J,QAAOC,cAI5C7I,KAGJD,K,gCEpBP,2HAUO,MAAM4J,EAAO7K,YAAO8K,OAAO,UAErBC,EAAM/K,YAAOgL,MAAM,MAC9BxJ,OAAQ,eAER,cAAe,CACbnB,aAAc,UAIL4K,EAAMjL,YAAOkL,MAAM,MAC9BpJ,QAAS,a,qECOImF,IAlBA,IAAkB,IAAblD,EAAY,oBAC9B,OACE,kBAAC,IAAD,eACE7C,UAAW,CACT+F,MAAO,CACL7F,MAAO,EAAGnB,YACD,eAbO,GAAGA,YACpB,aACLK,MAAOL,EAAOM,OAAOC,UAClBP,EAAOC,WAAWS,YAWRuG,CAAkB,CAAEjH,eAK3B8D,M,qECrBH,MAAMoH,EAAgB,IAEzB,yBACEjI,MAAM,6BACN7B,MAAM,KACNQ,OAAO,IACPsB,QAAQ,YAER,0BACEE,YAAU,sCACVC,EAAE,oBACFF,UAAU,uBACVG,KAAK,kBCTA6H,EAAwB,EAAGnL,YAC/BA,EAAOC,WAAWS,WAGZ,QAAmB,IAAboD,EAAY,oBAC/B,OACE,gBAAC,IAAD,eACE7C,UAAW,CACTmK,YAAa,IACJ,gBAACF,EAAD,MAET/B,QAAS,CACPrF,MAAO,CACL7C,UAAW,CACTmI,KAAM,CACJjI,MAAO,CAAEkI,OAAQ,OAKzBP,YAAa,CACX3H,MAAO,EAAGnB,YAAH,aACLK,MAAOL,EAAOM,OAAOC,UAClB4K,EAAsB,CAAEnL,aAG/BkJ,YAAa,CACX/H,MAAO,EAAGnB,YAAH,YAAC,eACHmL,EAAsB,CAAEnL,YADtB,IAELK,MAAOL,EAAOM,OAAOC,SACrB8K,WAAY,SAGhBtC,iBAAkB,CAChB5H,MAAO,EAAGnB,aAAH,CACLsL,SAAU,OACV1H,WAAY,MACZvD,MAAOL,EAAOM,OAAOC,YAGzByI,cAAe,CACb7H,MAAO,EAAGnB,SAAQiJ,eACT,2BACFjJ,EAAOC,WAAWS,YADvB,IAEEL,MAAO4I,EACHjJ,EAAOM,OAAOC,SACdP,EAAOM,OAAOqC,cAIxB4I,eAAgB,CACdpK,MAAO,EAAGnB,aAAH,CACLsL,SAAU,OACV1H,WAAY,MACZvD,MAAOL,EAAOM,OAAOC,cAIvBuD","file":"static/js/16.6fe65e47.chunk.js","sourcesContent":["import React from \"react\";\nimport { Block } from \"baseui/block\";\nimport { styled } from \"baseui\";\n\nconst Title = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.font18,\n  marginTop: \"0\",\n  marginBottom: \"0\",\n  color: $theme.colors.textDark,\n  textAlign: \"center\"\n}));\n\nconst Label = styled(\"label\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  marginBottom: \"10px\",\n  color: $theme.colors.textDark\n}));\n\nconst Msg = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold12,\n  color: $theme.colors.red400,\n  marginTop: \"5px\",\n  marginLeft: \"auto\"\n}));\n\nexport const FormFields = ({ children }) => {\n  return (\n    <Block\n      overrides={{\n        Block: {\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            margin: \"20px 0\",\n\n            \":first-child\": {\n              marginTop: 0\n            },\n\n            \":last-child\": {\n              marginBottom: 0\n            },\n\n            \":only-child\": {\n              margin: 0\n            }\n          }\n        }\n      }}\n    >\n      {children}\n    </Block>\n  );\n};\n\nexport const FormLabel = ({ children }) => {\n  return <Label>{children}</Label>;\n};\n\nexport const FormTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport const Error = ({ children }) => {\n  return <Msg>{children}</Msg>;\n};\n","import React from \"react\";\nimport { Block } from \"baseui/block\";\n\nconst DrawerBox = ({ overrides, children }: any) => {\n  return (\n    <Block\n      overrides={{\n        Block: {\n          style: {\n            width: \"100%\",\n            height: \"auto\",\n            padding: \"30px\",\n            borderRadius: \"3px\",\n            backgroundColor: \"#ffffff\"\n          }\n        },\n        ...overrides\n      }}\n    >\n      {children}\n    </Block>\n  );\n};\n\nexport default DrawerBox;\n","import { styled } from \"baseui\";\n\nexport const Form = styled(\"form\", ({ $theme }) => ({\n  // minHeight: '100vh',\n  backgroundColor: $theme.colors.backgroundF7,\n  paddingBottom: \"100px\"\n}));\n\nexport const DrawerTitleWrapper = styled(\"div\", ({ $theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  margin: \"-55px 0 30px\",\n  position: \"fixed\"\n}));\n\nexport const DrawerTitle = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  margin: 0,\n  color: $theme.colors.textDark\n}));\n\nexport const FieldDetails = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font14,\n  padding: \"28px 0 15px\",\n  color: $theme.colors.textNormal,\n  display: \"block\",\n\n  \"@media only screen and (max-width: 991px)\": {\n    padding: \"30px 0\"\n  }\n}));\n\nexport const ButtonGroup = styled(\"div\", ({ $theme }) => ({\n  padding: \"30px 60px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"fixed\",\n  bottom: \"0\",\n  right: \"0\",\n  width: \"100%\",\n  backgroundColor: \"#ffffff\",\n  boxShadow: \"0 0 3px rgba(0, 0, 0, 0.1)\",\n\n  \"@media only screen and (max-width: 767px)\": {\n    padding: \"20px 30px\"\n  }\n}));\n","import React from 'react';\nexport const UploadIcon = ({\n  color = 'currentColor',\n  width = '41px',\n  height = '30px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 40.909 30'\n    >\n      <g transform='translate(0 -73.091)'>\n        <path\n          data-name='Path 2125'\n          d='M39.129,89.827A8.064,8.064,0,0,0,34.58,86.94,5.446,5.446,0,0,0,30,78.546a5.207,5.207,0,0,0-3.537,1.321,10.921,10.921,0,0,0-10.1-6.776,10.511,10.511,0,0,0-7.713,3.2A10.508,10.508,0,0,0,5.454,84q0,.277.043.916A9.528,9.528,0,0,0,0,93.546a9.193,9.193,0,0,0,2.8,6.743,9.191,9.191,0,0,0,6.744,2.8H32.728a8.172,8.172,0,0,0,6.4-13.264Zm-12.06-.575a.656.656,0,0,1-.479.2H21.818v7.5a.691.691,0,0,1-.681.681H17.045a.691.691,0,0,1-.682-.681v-7.5H11.59a.655.655,0,0,1-.681-.681.8.8,0,0,1,.213-.512L18.6,80.783a.722.722,0,0,1,.98,0l7.5,7.5a.663.663,0,0,1,.191.49A.656.656,0,0,1,27.07,89.252Z'\n          transform='translate(0)'\n          fill='#e6e6e6'\n        />\n      </g>\n    </svg>\n  );\n};\n","import React, { useEffect, useState, useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { styled } from 'baseui';\nimport { UploadIcon } from '../../assets/icons/UploadIcon';\n\nconst Text = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.textDark,\n  marginTop: '15px',\n  textAlign: 'center',\n}));\n\nconst TextHighlighted = styled('span', ({ $theme }) => ({\n  color: $theme.colors.primary,\n  fontWeight: 'bold',\n}));\n\nconst Container = styled('div', ({ props }) => ({\n  flex: '1',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '30px',\n  borderWidth: '2px',\n  borderRadius: '2px',\n  borderColor: '#E6E6E6',\n  borderStyle: 'dashed',\n  backgroundColor: '#ffffff',\n  color: '#bdbdbd',\n  outline: 'none',\n  transition: 'border 0.24s ease-in-out',\n  cursor: 'pointer',\n}));\n\nconst ThumbsContainer = styled('aside', () => ({\n  display: 'flex',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  marginTop: '16px',\n}));\n\nconst Thumb = styled('div', ({ $theme }) => ({\n  ...$theme.borders.borderEA,\n  display: 'inline-flex',\n  borderRadius: '2px',\n  marginBottom: '8px',\n  marginRight: '8px',\n  width: '100px',\n  height: '100px',\n  padding: '4px',\n  boxSizing: 'border-box',\n}));\n\nconst thumbInner = {\n  display: 'flex',\n  minWidth: 0,\n  overflow: 'hidden',\n};\n\nconst img = {\n  display: 'block',\n  width: 'auto',\n  height: '100%',\n};\n\nfunction Uploader({ onChange, imageURL }: any) {\n  const [files, setFiles] = useState(\n    imageURL ? [{ name: 'demo', preview: imageURL }] : []\n  );\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: 'image/*',\n    multiple: false,\n    onDrop: useCallback(\n      (acceptedFiles) => {\n        setFiles(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n        onChange(acceptedFiles);\n      },\n      [onChange]\n    ),\n  });\n\n  const thumbs = files.map((file) => (\n    <Thumb key={file.name}>\n      <div style={thumbInner}>\n        <img src={file.preview} style={img} alt={file.name} />\n      </div>\n    </Thumb>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section className='container uploader'>\n      <Container {...getRootProps()}>\n        <input {...getInputProps()} />\n        <UploadIcon />\n        <Text>\n          <TextHighlighted>Drag/Upload</TextHighlighted> your image here.\n        </Text>\n      </Container>\n      {thumbs && <ThumbsContainer>{thumbs}</ThumbsContainer>}\n    </section>\n  );\n}\n\nexport default Uploader;\n","import React from 'react';\nimport { Textarea as BaseTextarea, SIZE } from 'baseui/textarea';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nexport const Textarea = ({ ...props }) => {\n  return (\n    <BaseTextarea\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Uploader from '../../components/Uploader/Uploader';\nimport Input from '../../components/Input/Input';\nimport { Textarea } from '../../components/Textarea/Textarea';\nimport Select from '../../components/Select/Select';\nimport Button from '../../components/Button/Button';\nimport DrawerBox from '../../components/DrawerBox/DrawerBox';\nimport { Grid, Row, Col } from '../../components/FlexBox/FlexBox';\nimport { Form, FieldDetails } from '../DrawerItems/DrawerItems.style';\nimport { FormFields, FormLabel } from '../../components/FormFields/FormFields';\n\nconst options = [\n  { value: 'active', label: 'Active' },\n  { value: 'maintenance', label: 'Maintenance' },\n  { value: 'turn-off', label: 'Down' },\n];\ntype Props = {};\nconst SiteSettingsForm: React.FC<Props> = () => {\n  const { register, handleSubmit, setValue } = useForm();\n  const onSubmit = (data) => console.log(data);\n  const [category, setCategory] = useState([]);\n  const [description, setDescription] = React.useState('');\n  const handleMultiChange = ({ value }) => {\n    setValue('reactSelect', value);\n    setCategory(value);\n  };\n  const handleUploader = (files) => {\n    setValue('reactDropzone', files);\n  };\n  React.useEffect(() => {\n    register({ name: 'reactSelect' });\n    register({ name: 'reactDropzone' });\n  }, [register]);\n  return (\n    <Grid fluid={true}>\n      <Form onSubmit={handleSubmit(onSubmit)} style={{ paddingBottom: 0 }}>\n        <Row>\n          <Col md={4}>\n            <FieldDetails>Upload your site logo here</FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <Uploader onChange={handleUploader} />\n            </DrawerBox>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={4}>\n            <FieldDetails>\n              Add your site description and necessary information from here\n            </FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <FormFields>\n                <FormLabel>Site Name</FormLabel>\n                <Input\n                  name='site_name'\n                  inputRef={register({ required: true, maxLength: 20 })}\n                />\n              </FormFields>\n\n              <FormFields>\n                <FormLabel>Site Description</FormLabel>\n                <Textarea\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </FormFields>\n\n              <FormFields>\n                <FormLabel>Status</FormLabel>\n                <Select\n                  options={options}\n                  labelKey='label'\n                  valueKey='value'\n                  placeholder='Choose current status'\n                  value={category}\n                  searchable={false}\n                  onChange={handleMultiChange}\n                  overrides={{\n                    Placeholder: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal,\n                        };\n                      },\n                    },\n                    DropdownListItem: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal,\n                        };\n                      },\n                    },\n                    OptionContent: {\n                      style: ({ $theme, $selected }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $selected\n                            ? $theme.colors.textDark\n                            : $theme.colors.textNormal,\n                        };\n                      },\n                    },\n                    SingleValue: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal,\n                        };\n                      },\n                    },\n                    Popover: {\n                      props: {\n                        overrides: {\n                          Body: {\n                            style: { zIndex: 5 },\n                          },\n                        },\n                      },\n                    },\n                  }}\n                />\n              </FormFields>\n\n              <FormFields>\n                <Button\n                  type='submit'\n                  overrides={{\n                    BaseButton: {\n                      style: ({ $theme }) => ({\n                        width: '50%',\n                        marginLeft: 'auto',\n                        borderTopLeftRadius: '3px',\n                        borderTopRightRadius: '3px',\n                        borderBottomLeftRadius: '3px',\n                        borderBottomRightRadius: '3px',\n                      }),\n                    },\n                  }}\n                >\n                  Submit\n                </Button>\n              </FormFields>\n            </DrawerBox>\n          </Col>\n        </Row>\n      </Form>\n    </Grid>\n  );\n};\n\nexport default SiteSettingsForm;\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n","import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","import React from 'react';\nexport const CaretDownIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='10'\n      height='5'\n      viewBox='0 0 10 5'\n    >\n      <path\n        data-name='_ionicons_svg_md-arrow-dropdown (2)'\n        d='M128,192l5,5,5-5Z'\n        transform='translate(-128 -192)'\n        fill='currentColor'\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from '../../assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n"],"sourceRoot":""}